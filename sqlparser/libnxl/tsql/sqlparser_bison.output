Terminals unused in grammar

   CONDITIONLESS_JOIN
   NATURAL
   ADD
   ANY
   ALTER
   BEGI
   BINARY
   BOTH
   CASCADE
   CHARACTER
   CLUSTER
   COMMENT
   COMMIT
   CONSISTENT
   COLUMN
   COLUMNS
   CREATE
   CREATETIME
   CURRENT_USER
   CHANGE_OBI
   SWITCH_CLUSTER
   DATE
   DEALLOCATE
   DECIMAL
   DEFAULT
   DELETE
   DESCRIBE
   DOUBLE
   DROP
   DUAL
   ERROR
   EXECUTE
   EXPLAIN
   FLOAT
   FROZEN
   FORCE
   GLOBAL
   GLOBAL_ALIAS
   GRANT
   HINT_BEGIN
   HINT_END
   HOTSPOT
   IDENTIFIED
   IF
   INSERT
   INTO
   KEY
   LEADING
   LIMIT
   LOCAL
   LOCKED
   MEMORY
   MODIFYTIME
   MASTER
   NUMERIC
   OPTION
   PARAMETERS
   PASSWORD
   PRECISION
   PREPARE
   PRIMARY
   READ_STATIC
   RENAME
   REPLACE
   RESTRICT
   PRIVILEGES
   REVOKE
   ROLLBACK
   KILL
   READ_CONSISTENCY
   SCHEMA
   SCOPE
   SESSION
   SESSION_ALIAS
   SET
   SHOW
   SNAPSHOT
   SPFILE
   START
   STATIC
   SYSTEM
   STRONG
   SET_MASTER_CLUSTER
   SET_SLAVE_CLUSTER
   SLAVE
   TABLE
   TABLES
   TIME
   TIMESTAMP
   TRAILING
   TRANSACTION
   TO
   UPDATE
   USER
   VALUES
   VARCHAR
   VARBINARY
   WORK
   PROCESSLIST
   QUERY
   CONNECTION
   WEAK


Grammar

    0 $accept: sql_stmt $end

    1 sql_stmt: stmt_list END_P

    2 stmt_list: stmt
    3          | stmt ';' stmt_list

    4 stmt: select_stmt
    5     | %empty

    6 select_stmt: select_no_parens

    7 select_with_parens: '(' select_no_parens ')'
    8                   | '(' select_with_parens ')'

    9 select_no_parens: select_clause opt_order_by opt_for_clause
   10                 | with_clause select_clause opt_order_by opt_for_clause

   11 select_clause: simple_select
   12              | select_with_parens

   13 simple_select: SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | select_clause UNION opt_distinct select_clause
   15              | select_clause INTERSECT opt_distinct select_clause
   16              | select_clause EXCEPT opt_distinct select_clause

   17 opt_top: %empty
   18        | TOP top_count
   19        | TOP top_count WITH TIES
   20        | TOP top_percent PERCENT
   21        | TOP top_percent PERCENT WITH TIES

   22 top_count: INTNUM
   23          | '(' expr ')'

   24 top_percent: APPROXNUM
   25            | INTNUM
   26            | '(' expr ')'

   27 opt_for_clause: %empty
   28               | FOR BROWSE

   29 opt_where: %empty
   30          | WHERE expr

   31 opt_from_clause: %empty
   32                | FROM from_list

   33 opt_hint: %empty

   34 opt_groupby: %empty
   35            | GROUP BY expr_list

   36 opt_order_by: order_by
   37             | %empty

   38 order_by: ORDER BY sort_list
   39         | ORDER BY sort_list offset_fetch

   40 offset_fetch: OFFSET expr ROW
   41             | OFFSET expr ROWS
   42             | OFFSET expr ROW FETCH FIRST expr ROW ONLY
   43             | OFFSET expr ROW FETCH NEXT expr ROW ONLY
   44             | OFFSET expr ROW FETCH FIRST expr ROWS ONLY
   45             | OFFSET expr ROW FETCH NEXT expr ROWS ONLY
   46             | OFFSET expr ROWS FETCH FIRST expr ROW ONLY
   47             | OFFSET expr ROWS FETCH NEXT expr ROW ONLY
   48             | OFFSET expr ROWS FETCH FIRST expr ROWS ONLY
   49             | OFFSET expr ROWS FETCH NEXT expr ROWS ONLY

   50 sort_list: sort_key
   51          | sort_key ',' sort_list

   52 sort_key: expr opt_asc_desc

   53 opt_asc_desc: %empty
   54             | ASC
   55             | DESC

   56 opt_having: %empty
   57           | HAVING expr

   58 with_clause: WITH with_list

   59 with_list: common_table_expr
   60          | common_table_expr ',' with_list

   61 common_table_expr: NAME opt_derived_column_list AS select_with_parens

   62 opt_derived_column_list: %empty
   63                        | simple_ident_list_with_parens

   64 simple_ident_list_with_parens: '(' simple_ident_list ')'

   65 simple_ident_list: NAME
   66                  | NAME ',' simple_ident_list

   67 opt_distinct: %empty
   68             | ALL
   69             | DISTINCT

   70 select_expr_list: projection
   71                 | projection ',' select_expr_list

   72 projection: expr
   73           | expr column_label
   74           | expr AS column_label
   75           | '*'

   76 from_list: table_factor
   77          | table_factor ',' from_list

   78 table_factor: table_factor_non_join
   79             | joined_table

   80 table_factor_non_join: relation_factor opt_with_table_hint
   81                      | relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | select_with_parens relation_name opt_simple_ident_list_with_parens

   85 opt_with_table_hint: %empty
   86                    | WITH '(' table_hint_list ')'

   87 table_hint_list: table_hint
   88                | table_hint ',' table_hint_list
   89                | table_hint table_hint_list

   90 table_hint: table_hint_expr
   91           | NOEXPAND table_hint_expr

   92 table_hint_expr: func_expr
   93                | NAME
   94                | NAME COMP_EQ expr

   95 opt_simple_ident_list_with_parens: %empty
   96                                  | simple_ident_list_with_parens

   97 relation_factor: NAME
   98                | NAME '.' NAME
   99                | NAME '.' NAME '.' NAME
  100                | NAME '.' '.' NAME
  101                | NAME '.' NAME '.' NAME '.' NAME
  102                | NAME '.' '.' NAME '.' NAME
  103                | NAME '.' NAME '.' '.' NAME
  104                | NAME '.' '.' '.' NAME

  105 joined_table: '(' joined_table ')'
  106             | table_factor join_type JOIN table_factor ON expr
  107             | table_factor JOIN table_factor ON expr
  108             | table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor JOIN table_factor USING '(' simple_ident_list ')'
  110             | table_factor CROSS JOIN table_factor

  111 join_type: FULL join_outer
  112          | LEFT join_outer
  113          | RIGHT join_outer
  114          | INNER

  115 join_outer: OUTER
  116           | %empty

  117 expr_list: expr
  118          | expr ',' expr_list

  119 column_ref: NAME
  120           | NAME '.' NAME
  121           | NAME '.' '*'
  122           | NAME '.' NAME '.' NAME
  123           | NAME '.' NAME '.' '*'
  124           | NAME '.' NAME '.' NAME '.' NAME
  125           | NAME '.' NAME '.' NAME '.' '*'
  126           | NAME '.' '.' NAME '.' NAME
  127           | NAME '.' '.' NAME '.' '*'
  128           | NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | NAME '.' '.' NAME '.' NAME '.' NAME
  131           | NAME '.' '.' NAME '.' NAME '.' '*'
  132           | NAME '.' NAME '.' '.' NAME '.' NAME
  133           | NAME '.' NAME '.' '.' NAME '.' '*'
  134           | NAME '.' '.' '.' NAME '.' NAME
  135           | NAME '.' '.' '.' NAME '.' '*'

  136 expr_const: STRING
  137           | INTNUM
  138           | APPROXNUM
  139           | BOOL
  140           | NULLX
  141           | QUESTIONMARK

  142 simple_expr: column_ref
  143            | expr_const
  144            | '(' expr_list ')'
  145            | case_expr
  146            | func_expr
  147            | select_with_parens
  148            | EXISTS select_with_parens

  149 arith_expr: simple_expr
  150           | '+' arith_expr
  151           | '-' arith_expr
  152           | arith_expr '+' arith_expr
  153           | arith_expr '-' arith_expr
  154           | arith_expr '*' arith_expr
  155           | arith_expr '/' arith_expr
  156           | arith_expr '%' arith_expr
  157           | arith_expr '^' arith_expr
  158           | arith_expr MOD arith_expr

  159 expr: arith_expr
  160     | expr COMP_LE expr
  161     | expr COMP_LT expr
  162     | expr COMP_EQ expr
  163     | expr COMP_GE expr
  164     | expr COMP_GT expr
  165     | expr COMP_NE expr
  166     | expr LIKE expr
  167     | expr NOT LIKE expr
  168     | expr AND expr
  169     | expr OR expr
  170     | NOT expr
  171     | expr IS NULLX
  172     | expr IS NOT NULLX
  173     | expr IS BOOL
  174     | expr IS NOT BOOL
  175     | expr IS UNKNOWN
  176     | expr IS NOT UNKNOWN
  177     | expr BETWEEN arith_expr AND arith_expr
  178     | expr NOT BETWEEN arith_expr AND arith_expr
  179     | expr IN in_expr
  180     | expr NOT IN in_expr
  181     | expr CNNOP expr

  182 in_expr: select_with_parens
  183        | '(' expr_list ')'

  184 case_expr: CASE case_arg when_clause_list case_default END

  185 case_arg: expr
  186         | %empty

  187 when_clause_list: when_clause
  188                 | when_clause when_clause_list

  189 when_clause: WHEN expr THEN expr

  190 case_default: ELSE expr
  191             | %empty

  192 func_expr: function_name '(' '*' ')'
  193          | function_name '(' distinct_or_all expr ')'
  194          | function_name '(' expr_list ')'
  195          | function_name '(' expr AS data_type ')'
  196          | function_name '(' ')'

  197 distinct_or_all: ALL
  198                | DISTINCT

  199 relation_name: NAME

  200 function_name: NAME

  201 column_label: NAME

  202 data_type: TINYINT
  203          | SMALLINT
  204          | MEDIUMINT
  205          | INTEGER
  206          | BIGINT
  207          | BOOLEAN
  208          | REAL
  209          | DATETIME


Terminals, with rules where they appear

$end (0) 0
'%' (37) 156
'(' (40) 7 8 23 26 64 86 105 108 109 144 183 192 193 194 195 196
')' (41) 7 8 23 26 64 86 105 108 109 144 183 192 193 194 195 196
'*' (42) 75 121 123 125 127 129 131 133 135 154 192
'+' (43) 150 152
',' (44) 51 60 66 71 77 88 118
'-' (45) 151 153
'.' (46) 98 99 100 101 102 103 104 120 121 122 123 124 125 126 127
    128 129 130 131 132 133 134 135
'/' (47) 155
';' (59) 3
'^' (94) 157
error (256)
NAME (258) 61 65 66 93 94 97 98 99 100 101 102 103 104 119 120 121
    122 123 124 125 126 127 128 129 130 131 132 133 134 135 199 200
    201
STRING (259) 136
INTNUM (260) 22 25 137
BOOL (261) 139 173 174
APPROXNUM (262) 24 138
NULLX (263) 140 171 172
UNKNOWN (264) 175 176
QUESTIONMARK (265) 141
CONDITIONLESS_JOIN (266)
CROSS (267) 110
FULL (268) 111
INNER (269) 114
JOIN (270) 106 107 108 109 110
LEFT (271) 112
NATURAL (272)
RIGHT (273) 113
ON (274) 106 107
USING (275) 108 109
UNION (276) 14
EXCEPT (277) 16
INTERSECT (278) 15
OR (279) 169
AND (280) 168 177 178
NOT (281) 167 170 172 174 176 178 180
COMP_LE (282) 160
COMP_LT (283) 161
COMP_EQ (284) 94 162
COMP_GT (285) 164
COMP_GE (286) 163
COMP_NE (287) 165
CNNOP (288) 181
LIKE (289) 166 167
BETWEEN (290) 177 178
IN (291) 179 180
IS (292) 171 172 173 174 175 176
MOD (293) 158
UMINUS (294)
ADD (295)
ANY (296)
ALL (297) 68 197
ALTER (298)
AS (299) 61 74 81 82 195
ASC (300) 54
BEGI (301)
BIGINT (302) 206
BINARY (303)
BOOLEAN (304) 207
BOTH (305)
BROWSE (306) 28
BY (307) 35 38 39
CASCADE (308)
CASE (309) 184
CHARACTER (310)
CLUSTER (311)
COMMENT (312)
COMMIT (313)
CONSISTENT (314)
COLUMN (315)
COLUMNS (316)
CREATE (317)
CREATETIME (318)
CURRENT_USER (319)
CHANGE_OBI (320)
SWITCH_CLUSTER (321)
DATE (322)
DATETIME (323) 209
DEALLOCATE (324)
DECIMAL (325)
DEFAULT (326)
DELETE (327)
DESC (328) 55
DESCRIBE (329)
DISTINCT (330) 69 198
DOUBLE (331)
DROP (332)
DUAL (333)
ELSE (334) 190
END (335) 184
END_P (336) 1
ERROR (337)
EXECUTE (338)
EXISTS (339) 148
EXPLAIN (340)
FETCH (341) 42 43 44 45 46 47 48 49
FIRST (342) 42 44 46 48
FLOAT (343)
FOR (344) 28
FROM (345) 32
FROZEN (346)
FORCE (347)
GLOBAL (348)
GLOBAL_ALIAS (349)
GRANT (350)
GROUP (351) 35
HAVING (352) 57
HINT_BEGIN (353)
HINT_END (354)
HOTSPOT (355)
IDENTIFIED (356)
IF (357)
INTEGER (358) 205
INSERT (359)
INTO (360)
KEY (361)
LEADING (362)
LIMIT (363)
LOCAL (364)
LOCKED (365)
MEDIUMINT (366) 204
MEMORY (367)
MODIFYTIME (368)
MASTER (369)
NEXT (370) 43 45 47 49
NOEXPAND (371) 91
NUMERIC (372)
OFFSET (373) 40 41 42 43 44 45 46 47 48 49
ONLY (374) 42 43 44 45 46 47 48 49
ORDER (375) 38 39
OPTION (376)
OUTER (377) 115
PARAMETERS (378)
PERCENT (379) 20 21
PASSWORD (380)
PRECISION (381)
PREPARE (382)
PRIMARY (383)
READ_STATIC (384)
REAL (385) 208
RENAME (386)
REPLACE (387)
RESTRICT (388)
PRIVILEGES (389)
REVOKE (390)
ROLLBACK (391)
ROW (392) 40 42 43 44 45 46 47
ROWS (393) 41 44 45 46 47 48 49
KILL (394)
READ_CONSISTENCY (395)
SCHEMA (396)
SCOPE (397)
SELECT (398) 13
SESSION (399)
SESSION_ALIAS (400)
SET (401)
SHOW (402)
SMALLINT (403) 203
SNAPSHOT (404)
SPFILE (405)
START (406)
STATIC (407)
SYSTEM (408)
STRONG (409)
SET_MASTER_CLUSTER (410)
SET_SLAVE_CLUSTER (411)
SLAVE (412)
TABLE (413)
TABLES (414)
THEN (415) 189
TIES (416) 19 21
TIME (417)
TIMESTAMP (418)
TINYINT (419) 202
TRAILING (420)
TRANSACTION (421)
TO (422)
TOP (423) 18 19 20 21
UPDATE (424)
USER (425)
VALUES (426)
VARCHAR (427)
VARBINARY (428)
WHERE (429) 30
WHEN (430) 189
WITH (431) 19 21 58 86
WORK (432)
PROCESSLIST (433)
QUERY (434)
CONNECTION (435)
WEAK (436)


Nonterminals, with rules where they appear

$accept (193)
    on left: 0
sql_stmt (194)
    on left: 1, on right: 0
stmt_list (195)
    on left: 2 3, on right: 1 3
stmt (196)
    on left: 4 5, on right: 2 3
select_stmt (197)
    on left: 6, on right: 4
select_with_parens (198)
    on left: 7 8, on right: 8 12 61 82 84 147 148 182
select_no_parens (199)
    on left: 9 10, on right: 6 7
select_clause (200)
    on left: 11 12, on right: 9 10 14 15 16
simple_select (201)
    on left: 13 14 15 16, on right: 11
opt_top (202)
    on left: 17 18 19 20 21, on right: 13
top_count (203)
    on left: 22 23, on right: 18 19
top_percent (204)
    on left: 24 25 26, on right: 20 21
opt_for_clause (205)
    on left: 27 28, on right: 9 10
opt_where (206)
    on left: 29 30, on right: 13
opt_from_clause (207)
    on left: 31 32, on right: 13
opt_hint (208)
    on left: 33, on right: 13
opt_groupby (209)
    on left: 34 35, on right: 13
opt_order_by (210)
    on left: 36 37, on right: 9 10
order_by (211)
    on left: 38 39, on right: 36
offset_fetch (212)
    on left: 40 41 42 43 44 45 46 47 48 49, on right: 39
sort_list (213)
    on left: 50 51, on right: 38 39 51
sort_key (214)
    on left: 52, on right: 50 51
opt_asc_desc (215)
    on left: 53 54 55, on right: 52
opt_having (216)
    on left: 56 57, on right: 13
with_clause (217)
    on left: 58, on right: 10
with_list (218)
    on left: 59 60, on right: 58 60
common_table_expr (219)
    on left: 61, on right: 59 60
opt_derived_column_list (220)
    on left: 62 63, on right: 61
simple_ident_list_with_parens (221)
    on left: 64, on right: 63 96
simple_ident_list (222)
    on left: 65 66, on right: 64 66 108 109
opt_distinct (223)
    on left: 67 68 69, on right: 13 14 15 16
select_expr_list (224)
    on left: 70 71, on right: 13 71
projection (225)
    on left: 72 73 74 75, on right: 70 71
from_list (226)
    on left: 76 77, on right: 32 77
table_factor (227)
    on left: 78 79, on right: 76 77 106 107 108 109 110
table_factor_non_join (228)
    on left: 80 81 82 83 84, on right: 78
opt_with_table_hint (229)
    on left: 85 86, on right: 80 81 83
table_hint_list (230)
    on left: 87 88 89, on right: 86 88 89
table_hint (231)
    on left: 90 91, on right: 87 88 89
table_hint_expr (232)
    on left: 92 93 94, on right: 90 91
opt_simple_ident_list_with_parens (233)
    on left: 95 96, on right: 81 82 83 84
relation_factor (234)
    on left: 97 98 99 100 101 102 103 104, on right: 80 81 83
joined_table (235)
    on left: 105 106 107 108 109 110, on right: 79 105
join_type (236)
    on left: 111 112 113 114, on right: 106 108
join_outer (237)
    on left: 115 116, on right: 111 112 113
expr_list (238)
    on left: 117 118, on right: 35 118 144 183 194
column_ref (239)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132
    133 134 135, on right: 142
expr_const (240)
    on left: 136 137 138 139 140 141, on right: 143
simple_expr (241)
    on left: 142 143 144 145 146 147 148, on right: 149
arith_expr (242)
    on left: 149 150 151 152 153 154 155 156 157 158, on right: 150
    151 152 153 154 155 156 157 158 159 177 178
expr (243)
    on left: 159 160 161 162 163 164 165 166 167 168 169 170 171 172
    173 174 175 176 177 178 179 180 181, on right: 23 26 30 40 41 42
    43 44 45 46 47 48 49 52 57 72 73 74 94 106 107 117 118 160 161
    162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
    178 179 180 181 185 189 190 193 195
in_expr (244)
    on left: 182 183, on right: 179 180
case_expr (245)
    on left: 184, on right: 145
case_arg (246)
    on left: 185 186, on right: 184
when_clause_list (247)
    on left: 187 188, on right: 184 188
when_clause (248)
    on left: 189, on right: 187 188
case_default (249)
    on left: 190 191, on right: 184
func_expr (250)
    on left: 192 193 194 195 196, on right: 92 146
distinct_or_all (251)
    on left: 197 198, on right: 193
relation_name (252)
    on left: 199, on right: 81 82 83 84
function_name (253)
    on left: 200, on right: 192 193 194 195 196
column_label (254)
    on left: 201, on right: 73 74
data_type (255)
    on left: 202 203 204 205 206 207 208 209, on right: 195


State 0

    0 $accept: . sql_stmt $end
    1 sql_stmt: . stmt_list END_P
    2 stmt_list: . stmt
    3          | . stmt ';' stmt_list
    4 stmt: . select_stmt
    5     | . %empty  [END_P, ';']
    6 select_stmt: . select_no_parens
    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
    9 select_no_parens: . select_clause opt_order_by opt_for_clause
   10                 | . with_clause select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   58 with_clause: . WITH with_list

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2
    WITH    shift, and go to state 3

    $default  reduce using rule 5 (stmt)

    sql_stmt            go to state 4
    stmt_list           go to state 5
    stmt                go to state 6
    select_stmt         go to state 7
    select_with_parens  go to state 8
    select_no_parens    go to state 9
    select_clause       go to state 10
    simple_select       go to state 11
    with_clause         go to state 12


State 1

    7 select_with_parens: . '(' select_no_parens ')'
    7                   | '(' . select_no_parens ')'
    8                   | . '(' select_with_parens ')'
    8                   | '(' . select_with_parens ')'
    9 select_no_parens: . select_clause opt_order_by opt_for_clause
   10                 | . with_clause select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   58 with_clause: . WITH with_list

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2
    WITH    shift, and go to state 3

    select_with_parens  go to state 13
    select_no_parens    go to state 14
    select_clause       go to state 10
    simple_select       go to state 11
    with_clause         go to state 12


State 2

   13 simple_select: SELECT . opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   33 opt_hint: . %empty

    $default  reduce using rule 33 (opt_hint)

    opt_hint  go to state 15


State 3

   58 with_clause: WITH . with_list
   59 with_list: . common_table_expr
   60          | . common_table_expr ',' with_list
   61 common_table_expr: . NAME opt_derived_column_list AS select_with_parens

    NAME  shift, and go to state 16

    with_list          go to state 17
    common_table_expr  go to state 18


State 4

    0 $accept: sql_stmt . $end

    $end  shift, and go to state 19


State 5

    1 sql_stmt: stmt_list . END_P

    END_P  shift, and go to state 20


State 6

    2 stmt_list: stmt .  [END_P]
    3          | stmt . ';' stmt_list

    ';'  shift, and go to state 21

    $default  reduce using rule 2 (stmt_list)


State 7

    4 stmt: select_stmt .

    $default  reduce using rule 4 (stmt)


State 8

   12 select_clause: select_with_parens .

    $default  reduce using rule 12 (select_clause)


State 9

    6 select_stmt: select_no_parens .

    $default  reduce using rule 6 (select_stmt)


State 10

    9 select_no_parens: select_clause . opt_order_by opt_for_clause
   14 simple_select: select_clause . UNION opt_distinct select_clause
   15              | select_clause . INTERSECT opt_distinct select_clause
   16              | select_clause . EXCEPT opt_distinct select_clause
   36 opt_order_by: . order_by
   37             | . %empty  [')', END_P, FOR, ';']
   38 order_by: . ORDER BY sort_list
   39         | . ORDER BY sort_list offset_fetch

    UNION      shift, and go to state 22
    EXCEPT     shift, and go to state 23
    INTERSECT  shift, and go to state 24
    ORDER      shift, and go to state 25

    $default  reduce using rule 37 (opt_order_by)

    opt_order_by  go to state 26
    order_by      go to state 27


State 11

   11 select_clause: simple_select .

    $default  reduce using rule 11 (select_clause)


State 12

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   10 select_no_parens: with_clause . select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2

    select_with_parens  go to state 8
    select_clause       go to state 28
    simple_select       go to state 11


State 13

    8 select_with_parens: '(' select_with_parens . ')'
   12 select_clause: select_with_parens .  [UNION, EXCEPT, INTERSECT, FOR, ORDER]

    ')'  shift, and go to state 29

    $default  reduce using rule 12 (select_clause)

    Conflict between rule 12 and token ')' resolved as shift (UMINUS < ')').


State 14

    7 select_with_parens: '(' select_no_parens . ')'

    ')'  shift, and go to state 30


State 15

   13 simple_select: SELECT opt_hint . opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   67 opt_distinct: . %empty  [NAME, STRING, INTNUM, BOOL, APPROXNUM, NULLX, QUESTIONMARK, NOT, '+', '-', '*', '(', CASE, EXISTS, TOP]
   68             | . ALL
   69             | . DISTINCT

    ALL       shift, and go to state 31
    DISTINCT  shift, and go to state 32

    $default  reduce using rule 67 (opt_distinct)

    opt_distinct  go to state 33


State 16

   61 common_table_expr: NAME . opt_derived_column_list AS select_with_parens
   62 opt_derived_column_list: . %empty  [AS]
   63                        | . simple_ident_list_with_parens
   64 simple_ident_list_with_parens: . '(' simple_ident_list ')'

    '('  shift, and go to state 34

    $default  reduce using rule 62 (opt_derived_column_list)

    opt_derived_column_list        go to state 35
    simple_ident_list_with_parens  go to state 36


State 17

   58 with_clause: WITH with_list .

    $default  reduce using rule 58 (with_clause)


State 18

   59 with_list: common_table_expr .  ['(', SELECT]
   60          | common_table_expr . ',' with_list

    ','  shift, and go to state 37

    $default  reduce using rule 59 (with_list)


State 19

    0 $accept: sql_stmt $end .

    $default  accept


State 20

    1 sql_stmt: stmt_list END_P .

    $default  reduce using rule 1 (sql_stmt)


State 21

    2 stmt_list: . stmt
    3          | . stmt ';' stmt_list
    3          | stmt ';' . stmt_list
    4 stmt: . select_stmt
    5     | . %empty  [END_P, ';']
    6 select_stmt: . select_no_parens
    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
    9 select_no_parens: . select_clause opt_order_by opt_for_clause
   10                 | . with_clause select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   58 with_clause: . WITH with_list

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2
    WITH    shift, and go to state 3

    $default  reduce using rule 5 (stmt)

    stmt_list           go to state 38
    stmt                go to state 6
    select_stmt         go to state 7
    select_with_parens  go to state 8
    select_no_parens    go to state 9
    select_clause       go to state 10
    simple_select       go to state 11
    with_clause         go to state 12


State 22

   14 simple_select: select_clause UNION . opt_distinct select_clause
   67 opt_distinct: . %empty  ['(', SELECT]
   68             | . ALL
   69             | . DISTINCT

    ALL       shift, and go to state 31
    DISTINCT  shift, and go to state 32

    $default  reduce using rule 67 (opt_distinct)

    opt_distinct  go to state 39


State 23

   16 simple_select: select_clause EXCEPT . opt_distinct select_clause
   67 opt_distinct: . %empty  ['(', SELECT]
   68             | . ALL
   69             | . DISTINCT

    ALL       shift, and go to state 31
    DISTINCT  shift, and go to state 32

    $default  reduce using rule 67 (opt_distinct)

    opt_distinct  go to state 40


State 24

   15 simple_select: select_clause INTERSECT . opt_distinct select_clause
   67 opt_distinct: . %empty  ['(', SELECT]
   68             | . ALL
   69             | . DISTINCT

    ALL       shift, and go to state 31
    DISTINCT  shift, and go to state 32

    $default  reduce using rule 67 (opt_distinct)

    opt_distinct  go to state 41


State 25

   38 order_by: ORDER . BY sort_list
   39         | ORDER . BY sort_list offset_fetch

    BY  shift, and go to state 42


State 26

    9 select_no_parens: select_clause opt_order_by . opt_for_clause
   27 opt_for_clause: . %empty  [')', END_P, ';']
   28               | . FOR BROWSE

    FOR  shift, and go to state 43

    $default  reduce using rule 27 (opt_for_clause)

    opt_for_clause  go to state 44


State 27

   36 opt_order_by: order_by .

    $default  reduce using rule 36 (opt_order_by)


State 28

   10 select_no_parens: with_clause select_clause . opt_order_by opt_for_clause
   14 simple_select: select_clause . UNION opt_distinct select_clause
   15              | select_clause . INTERSECT opt_distinct select_clause
   16              | select_clause . EXCEPT opt_distinct select_clause
   36 opt_order_by: . order_by
   37             | . %empty  [')', END_P, FOR, ';']
   38 order_by: . ORDER BY sort_list
   39         | . ORDER BY sort_list offset_fetch

    UNION      shift, and go to state 22
    EXCEPT     shift, and go to state 23
    INTERSECT  shift, and go to state 24
    ORDER      shift, and go to state 25

    $default  reduce using rule 37 (opt_order_by)

    opt_order_by  go to state 45
    order_by      go to state 27


State 29

    8 select_with_parens: '(' select_with_parens ')' .

    $default  reduce using rule 8 (select_with_parens)


State 30

    7 select_with_parens: '(' select_no_parens ')' .

    $default  reduce using rule 7 (select_with_parens)


State 31

   68 opt_distinct: ALL .

    $default  reduce using rule 68 (opt_distinct)


State 32

   69 opt_distinct: DISTINCT .

    $default  reduce using rule 69 (opt_distinct)


State 33

   13 simple_select: SELECT opt_hint opt_distinct . opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   17 opt_top: . %empty  [NAME, STRING, INTNUM, BOOL, APPROXNUM, NULLX, QUESTIONMARK, NOT, '+', '-', '*', '(', CASE, EXISTS]
   18        | . TOP top_count
   19        | . TOP top_count WITH TIES
   20        | . TOP top_percent PERCENT
   21        | . TOP top_percent PERCENT WITH TIES

    TOP  shift, and go to state 46

    $default  reduce using rule 17 (opt_top)

    opt_top  go to state 47


State 34

   64 simple_ident_list_with_parens: '(' . simple_ident_list ')'
   65 simple_ident_list: . NAME
   66                  | . NAME ',' simple_ident_list

    NAME  shift, and go to state 48

    simple_ident_list  go to state 49


State 35

   61 common_table_expr: NAME opt_derived_column_list . AS select_with_parens

    AS  shift, and go to state 50


State 36

   63 opt_derived_column_list: simple_ident_list_with_parens .

    $default  reduce using rule 63 (opt_derived_column_list)


State 37

   59 with_list: . common_table_expr
   60          | . common_table_expr ',' with_list
   60          | common_table_expr ',' . with_list
   61 common_table_expr: . NAME opt_derived_column_list AS select_with_parens

    NAME  shift, and go to state 16

    with_list          go to state 51
    common_table_expr  go to state 18


State 38

    3 stmt_list: stmt ';' stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 39

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   14              | select_clause UNION opt_distinct . select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2

    select_with_parens  go to state 8
    select_clause       go to state 52
    simple_select       go to state 11


State 40

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   16              | select_clause EXCEPT opt_distinct . select_clause

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2

    select_with_parens  go to state 8
    select_clause       go to state 53
    simple_select       go to state 11


State 41

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   15              | select_clause INTERSECT opt_distinct . select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause

    '('     shift, and go to state 1
    SELECT  shift, and go to state 2

    select_with_parens  go to state 8
    select_clause       go to state 54
    simple_select       go to state 11


State 42

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   38 order_by: ORDER BY . sort_list
   39         | ORDER BY . sort_list offset_fetch
   50 sort_list: . sort_key
   51          | . sort_key ',' sort_list
   52 sort_key: . expr opt_asc_desc
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    sort_list           go to state 69
    sort_key            go to state 70
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 75
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 43

   28 opt_for_clause: FOR . BROWSE

    BROWSE  shift, and go to state 79


State 44

    9 select_no_parens: select_clause opt_order_by opt_for_clause .

    $default  reduce using rule 9 (select_no_parens)


State 45

   10 select_no_parens: with_clause select_clause opt_order_by . opt_for_clause
   27 opt_for_clause: . %empty  [')', END_P, ';']
   28               | . FOR BROWSE

    FOR  shift, and go to state 43

    $default  reduce using rule 27 (opt_for_clause)

    opt_for_clause  go to state 80


State 46

   18 opt_top: TOP . top_count
   19        | TOP . top_count WITH TIES
   20        | TOP . top_percent PERCENT
   21        | TOP . top_percent PERCENT WITH TIES
   22 top_count: . INTNUM
   23          | . '(' expr ')'
   24 top_percent: . APPROXNUM
   25            | . INTNUM
   26            | . '(' expr ')'

    INTNUM     shift, and go to state 81
    APPROXNUM  shift, and go to state 82
    '('        shift, and go to state 83

    top_count    go to state 84
    top_percent  go to state 85


State 47

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   13 simple_select: SELECT opt_hint opt_distinct opt_top . select_expr_list opt_from_clause opt_where opt_groupby opt_having
   70 select_expr_list: . projection
   71                 | . projection ',' select_expr_list
   72 projection: . expr
   73           | . expr column_label
   74           | . expr AS column_label
   75           | . '*'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 86
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    select_expr_list    go to state 87
    projection          go to state 88
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 89
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 48

   65 simple_ident_list: NAME .  [')']
   66                  | NAME . ',' simple_ident_list

    ','  shift, and go to state 90

    $default  reduce using rule 65 (simple_ident_list)


State 49

   64 simple_ident_list_with_parens: '(' simple_ident_list . ')'

    ')'  shift, and go to state 91


State 50

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   61 common_table_expr: NAME opt_derived_column_list AS . select_with_parens

    '('  shift, and go to state 1

    select_with_parens  go to state 92


State 51

   60 with_list: common_table_expr ',' with_list .

    $default  reduce using rule 60 (with_list)


State 52

   14 simple_select: select_clause . UNION opt_distinct select_clause
   14              | select_clause UNION opt_distinct select_clause .  [UNION, EXCEPT, ')', END_P, FOR, ORDER, ';']
   15              | select_clause . INTERSECT opt_distinct select_clause
   16              | select_clause . EXCEPT opt_distinct select_clause

    INTERSECT  shift, and go to state 24

    $default  reduce using rule 14 (simple_select)

    Conflict between rule 14 and token UNION resolved as reduce (%left UNION).
    Conflict between rule 14 and token EXCEPT resolved as reduce (%left EXCEPT).
    Conflict between rule 14 and token INTERSECT resolved as shift (UNION < INTERSECT).


State 53

   14 simple_select: select_clause . UNION opt_distinct select_clause
   15              | select_clause . INTERSECT opt_distinct select_clause
   16              | select_clause . EXCEPT opt_distinct select_clause
   16              | select_clause EXCEPT opt_distinct select_clause .  [UNION, EXCEPT, ')', END_P, FOR, ORDER, ';']

    INTERSECT  shift, and go to state 24

    $default  reduce using rule 16 (simple_select)

    Conflict between rule 16 and token UNION resolved as reduce (%left UNION).
    Conflict between rule 16 and token EXCEPT resolved as reduce (%left EXCEPT).
    Conflict between rule 16 and token INTERSECT resolved as shift (EXCEPT < INTERSECT).


State 54

   14 simple_select: select_clause . UNION opt_distinct select_clause
   15              | select_clause . INTERSECT opt_distinct select_clause
   15              | select_clause INTERSECT opt_distinct select_clause .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, ORDER, ';']
   16              | select_clause . EXCEPT opt_distinct select_clause

    $default  reduce using rule 15 (simple_select)

    Conflict between rule 15 and token UNION resolved as reduce (UNION < INTERSECT).
    Conflict between rule 15 and token EXCEPT resolved as reduce (EXCEPT < INTERSECT).
    Conflict between rule 15 and token INTERSECT resolved as reduce (%left INTERSECT).


State 55

  119 column_ref: NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  120           | NAME . '.' NAME
  121           | NAME . '.' '*'
  122           | NAME . '.' NAME '.' NAME
  123           | NAME . '.' NAME '.' '*'
  124           | NAME . '.' NAME '.' NAME '.' NAME
  125           | NAME . '.' NAME '.' NAME '.' '*'
  126           | NAME . '.' '.' NAME '.' NAME
  127           | NAME . '.' '.' NAME '.' '*'
  128           | NAME . '.' NAME '.' NAME '.' NAME '.' NAME
  129           | NAME . '.' NAME '.' NAME '.' NAME '.' '*'
  130           | NAME . '.' '.' NAME '.' NAME '.' NAME
  131           | NAME . '.' '.' NAME '.' NAME '.' '*'
  132           | NAME . '.' NAME '.' '.' NAME '.' NAME
  133           | NAME . '.' NAME '.' '.' NAME '.' '*'
  134           | NAME . '.' '.' '.' NAME '.' NAME
  135           | NAME . '.' '.' '.' NAME '.' '*'
  200 function_name: NAME .  ['(']

    '.'  shift, and go to state 93

    '('       reduce using rule 200 (function_name)
    $default  reduce using rule 119 (column_ref)


State 56

  136 expr_const: STRING .

    $default  reduce using rule 136 (expr_const)


State 57

  137 expr_const: INTNUM .

    $default  reduce using rule 137 (expr_const)


State 58

  139 expr_const: BOOL .

    $default  reduce using rule 139 (expr_const)


State 59

  138 expr_const: APPROXNUM .

    $default  reduce using rule 138 (expr_const)


State 60

  140 expr_const: NULLX .

    $default  reduce using rule 140 (expr_const)


State 61

  141 expr_const: QUESTIONMARK .

    $default  reduce using rule 141 (expr_const)


State 62

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  170     | NOT . expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 94
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 63

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  150           | '+' . arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 95
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 64

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  151           | '-' . arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 96
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 65

    7 select_with_parens: . '(' select_no_parens ')'
    7                   | '(' . select_no_parens ')'
    8                   | . '(' select_with_parens ')'
    8                   | '(' . select_with_parens ')'
    9 select_no_parens: . select_clause opt_order_by opt_for_clause
   10                 | . with_clause select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   58 with_clause: . WITH with_list
  117 expr_list: . expr
  118          | . expr ',' expr_list
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  144            | '(' . expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67
    SELECT        shift, and go to state 2
    WITH          shift, and go to state 3

    select_with_parens  go to state 97
    select_no_parens    go to state 14
    select_clause       go to state 10
    simple_select       go to state 11
    with_clause         go to state 12
    expr_list           go to state 98
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 99
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 66

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  184          | CASE . case_arg when_clause_list case_default END
  185 case_arg: . expr
  186         | . %empty  [WHEN]
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    $default  reduce using rule 186 (case_arg)

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 100
    case_expr           go to state 76
    case_arg            go to state 101
    func_expr           go to state 77
    function_name       go to state 78


State 67

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  148 simple_expr: EXISTS . select_with_parens

    '('  shift, and go to state 1

    select_with_parens  go to state 102


State 68

  147 simple_expr: select_with_parens .

    $default  reduce using rule 147 (simple_expr)


State 69

   38 order_by: ORDER BY sort_list .  [')', END_P, FOR, ';']
   39         | ORDER BY sort_list . offset_fetch
   40 offset_fetch: . OFFSET expr ROW
   41             | . OFFSET expr ROWS
   42             | . OFFSET expr ROW FETCH FIRST expr ROW ONLY
   43             | . OFFSET expr ROW FETCH NEXT expr ROW ONLY
   44             | . OFFSET expr ROW FETCH FIRST expr ROWS ONLY
   45             | . OFFSET expr ROW FETCH NEXT expr ROWS ONLY
   46             | . OFFSET expr ROWS FETCH FIRST expr ROW ONLY
   47             | . OFFSET expr ROWS FETCH NEXT expr ROW ONLY
   48             | . OFFSET expr ROWS FETCH FIRST expr ROWS ONLY
   49             | . OFFSET expr ROWS FETCH NEXT expr ROWS ONLY

    OFFSET  shift, and go to state 103

    $default  reduce using rule 38 (order_by)

    offset_fetch  go to state 104


State 70

   50 sort_list: sort_key .  [')', END_P, FOR, OFFSET, ';']
   51          | sort_key . ',' sort_list

    ','  shift, and go to state 105

    $default  reduce using rule 50 (sort_list)


State 71

  142 simple_expr: column_ref .

    $default  reduce using rule 142 (simple_expr)


State 72

  143 simple_expr: expr_const .

    $default  reduce using rule 143 (simple_expr)


State 73

  149 arith_expr: simple_expr .

    $default  reduce using rule 149 (arith_expr)


State 74

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr
  159 expr: arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 159 (expr)


State 75

   52 sort_key: expr . opt_asc_desc
   53 opt_asc_desc: . %empty  [')', END_P, FOR, OFFSET, ';', ',']
   54             | . ASC
   55             | . DESC
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ASC      shift, and go to state 127
    DESC     shift, and go to state 128

    $default  reduce using rule 53 (opt_asc_desc)

    opt_asc_desc  go to state 129


State 76

  145 simple_expr: case_expr .

    $default  reduce using rule 145 (simple_expr)


State 77

  146 simple_expr: func_expr .

    $default  reduce using rule 146 (simple_expr)


State 78

  192 func_expr: function_name . '(' '*' ')'
  193          | function_name . '(' distinct_or_all expr ')'
  194          | function_name . '(' expr_list ')'
  195          | function_name . '(' expr AS data_type ')'
  196          | function_name . '(' ')'

    '('  shift, and go to state 130


State 79

   28 opt_for_clause: FOR BROWSE .

    $default  reduce using rule 28 (opt_for_clause)


State 80

   10 select_no_parens: with_clause select_clause opt_order_by opt_for_clause .

    $default  reduce using rule 10 (select_no_parens)


State 81

   22 top_count: INTNUM .  [NAME, STRING, INTNUM, BOOL, APPROXNUM, NULLX, QUESTIONMARK, NOT, '+', '-', '*', '(', CASE, EXISTS, WITH]
   25 top_percent: INTNUM .  [PERCENT]

    PERCENT   reduce using rule 25 (top_percent)
    $default  reduce using rule 22 (top_count)


State 82

   24 top_percent: APPROXNUM .

    $default  reduce using rule 24 (top_percent)


State 83

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   23 top_count: '(' . expr ')'
   26 top_percent: '(' . expr ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 131
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 84

   18 opt_top: TOP top_count .  [NAME, STRING, INTNUM, BOOL, APPROXNUM, NULLX, QUESTIONMARK, NOT, '+', '-', '*', '(', CASE, EXISTS]
   19        | TOP top_count . WITH TIES

    WITH  shift, and go to state 132

    $default  reduce using rule 18 (opt_top)


State 85

   20 opt_top: TOP top_percent . PERCENT
   21        | TOP top_percent . PERCENT WITH TIES

    PERCENT  shift, and go to state 133


State 86

   75 projection: '*' .

    $default  reduce using rule 75 (projection)


State 87

   13 simple_select: SELECT opt_hint opt_distinct opt_top select_expr_list . opt_from_clause opt_where opt_groupby opt_having
   31 opt_from_clause: . %empty  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';']
   32                | . FROM from_list

    FROM  shift, and go to state 134

    $default  reduce using rule 31 (opt_from_clause)

    opt_from_clause  go to state 135


State 88

   70 select_expr_list: projection .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, FROM, GROUP, HAVING, ORDER, WHERE, ';']
   71                 | projection . ',' select_expr_list

    ','  shift, and go to state 136

    $default  reduce using rule 70 (select_expr_list)


State 89

   72 projection: expr .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, FROM, GROUP, HAVING, ORDER, WHERE, ';', ',']
   73           | expr . column_label
   74           | expr . AS column_label
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  201 column_label: . NAME

    NAME     shift, and go to state 137
    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    AS       shift, and go to state 138

    $default  reduce using rule 72 (projection)

    column_label  go to state 139


State 90

   65 simple_ident_list: . NAME
   66                  | . NAME ',' simple_ident_list
   66                  | NAME ',' . simple_ident_list

    NAME  shift, and go to state 48

    simple_ident_list  go to state 140


State 91

   64 simple_ident_list_with_parens: '(' simple_ident_list ')' .

    $default  reduce using rule 64 (simple_ident_list_with_parens)


State 92

   61 common_table_expr: NAME opt_derived_column_list AS select_with_parens .

    $default  reduce using rule 61 (common_table_expr)


State 93

  120 column_ref: NAME '.' . NAME
  121           | NAME '.' . '*'
  122           | NAME '.' . NAME '.' NAME
  123           | NAME '.' . NAME '.' '*'
  124           | NAME '.' . NAME '.' NAME '.' NAME
  125           | NAME '.' . NAME '.' NAME '.' '*'
  126           | NAME '.' . '.' NAME '.' NAME
  127           | NAME '.' . '.' NAME '.' '*'
  128           | NAME '.' . NAME '.' NAME '.' NAME '.' NAME
  129           | NAME '.' . NAME '.' NAME '.' NAME '.' '*'
  130           | NAME '.' . '.' NAME '.' NAME '.' NAME
  131           | NAME '.' . '.' NAME '.' NAME '.' '*'
  132           | NAME '.' . NAME '.' '.' NAME '.' NAME
  133           | NAME '.' . NAME '.' '.' NAME '.' '*'
  134           | NAME '.' . '.' '.' NAME '.' NAME
  135           | NAME '.' . '.' '.' NAME '.' '*'

    NAME  shift, and go to state 141
    '*'   shift, and go to state 142
    '.'   shift, and go to state 143


State 94

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  170     | NOT expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 170 (expr)

    Conflict between rule 170 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 170 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 170 and token NOT resolved as shift (%right NOT).
    Conflict between rule 170 and token COMP_LE resolved as shift (NOT < COMP_LE).
    Conflict between rule 170 and token COMP_LT resolved as shift (NOT < COMP_LT).
    Conflict between rule 170 and token COMP_EQ resolved as shift (NOT < COMP_EQ).
    Conflict between rule 170 and token COMP_GT resolved as shift (NOT < COMP_GT).
    Conflict between rule 170 and token COMP_GE resolved as shift (NOT < COMP_GE).
    Conflict between rule 170 and token COMP_NE resolved as shift (NOT < COMP_NE).
    Conflict between rule 170 and token CNNOP resolved as shift (NOT < CNNOP).
    Conflict between rule 170 and token LIKE resolved as shift (NOT < LIKE).
    Conflict between rule 170 and token BETWEEN resolved as shift (NOT < BETWEEN).
    Conflict between rule 170 and token IN resolved as shift (NOT < IN).
    Conflict between rule 170 and token IS resolved as shift (NOT < IS).


State 95

  150 arith_expr: '+' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  152           | arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 150 (arith_expr)

    Conflict between rule 150 and token '+' resolved as reduce (%left '+').
    Conflict between rule 150 and token '-' resolved as reduce (%left '-').
    Conflict between rule 150 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 150 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 150 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 150 and token MOD resolved as shift ('+' < MOD).
    Conflict between rule 150 and token '^' resolved as shift ('+' < '^').


State 96

  151 arith_expr: '-' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  152           | arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 151 (arith_expr)

    Conflict between rule 151 and token '+' resolved as reduce (%left '+').
    Conflict between rule 151 and token '-' resolved as reduce (%left '-').
    Conflict between rule 151 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 151 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 151 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 151 and token MOD resolved as shift ('-' < MOD).
    Conflict between rule 151 and token '^' resolved as shift ('-' < '^').


State 97

    8 select_with_parens: '(' select_with_parens . ')'
   12 select_clause: select_with_parens .  [UNION, EXCEPT, INTERSECT, FOR, ORDER]
  147 simple_expr: select_with_parens .  [OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ',']

    ')'  shift, and go to state 29

    UNION      reduce using rule 12 (select_clause)
    EXCEPT     reduce using rule 12 (select_clause)
    INTERSECT  reduce using rule 12 (select_clause)
    FOR        reduce using rule 12 (select_clause)
    ORDER      reduce using rule 12 (select_clause)
    $default   reduce using rule 147 (simple_expr)

    Conflict between rule 12 and token ')' resolved as shift (UMINUS < ')').
    Conflict between rule 147 and token ')' resolved as shift (UMINUS < ')').


State 98

  144 simple_expr: '(' expr_list . ')'

    ')'  shift, and go to state 144


State 99

  117 expr_list: expr .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, HAVING, ORDER, ';']
  118          | expr . ',' expr_list
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ','      shift, and go to state 145

    $default  reduce using rule 117 (expr_list)


State 100

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  185 case_arg: expr .  [WHEN]

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 185 (case_arg)


State 101

  184 case_expr: CASE case_arg . when_clause_list case_default END
  187 when_clause_list: . when_clause
  188                 | . when_clause when_clause_list
  189 when_clause: . WHEN expr THEN expr

    WHEN  shift, and go to state 146

    when_clause_list  go to state 147
    when_clause       go to state 148


State 102

  148 simple_expr: EXISTS select_with_parens .

    $default  reduce using rule 148 (simple_expr)


State 103

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   40 offset_fetch: OFFSET . expr ROW
   41             | OFFSET . expr ROWS
   42             | OFFSET . expr ROW FETCH FIRST expr ROW ONLY
   43             | OFFSET . expr ROW FETCH NEXT expr ROW ONLY
   44             | OFFSET . expr ROW FETCH FIRST expr ROWS ONLY
   45             | OFFSET . expr ROW FETCH NEXT expr ROWS ONLY
   46             | OFFSET . expr ROWS FETCH FIRST expr ROW ONLY
   47             | OFFSET . expr ROWS FETCH NEXT expr ROW ONLY
   48             | OFFSET . expr ROWS FETCH FIRST expr ROWS ONLY
   49             | OFFSET . expr ROWS FETCH NEXT expr ROWS ONLY
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 149
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 104

   39 order_by: ORDER BY sort_list offset_fetch .

    $default  reduce using rule 39 (order_by)


State 105

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   50 sort_list: . sort_key
   51          | . sort_key ',' sort_list
   51          | sort_key ',' . sort_list
   52 sort_key: . expr opt_asc_desc
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    sort_list           go to state 150
    sort_key            go to state 70
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 75
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 106

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  152           | arith_expr '+' . arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 151
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 107

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  153           | arith_expr '-' . arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 152
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 108

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  154           | arith_expr '*' . arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 153
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 109

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  155           | arith_expr '/' . arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 154
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 110

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  156           | arith_expr '%' . arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 155
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 111

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  158           | arith_expr MOD . arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 156
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 112

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  157           | arith_expr '^' . arith_expr
  158           | . arith_expr MOD arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 157
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 113

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  169     | expr OR . expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 158
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 114

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  168     | expr AND . expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 159
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 115

  167 expr: expr NOT . LIKE expr
  178     | expr NOT . BETWEEN arith_expr AND arith_expr
  180     | expr NOT . IN in_expr

    LIKE     shift, and go to state 160
    BETWEEN  shift, and go to state 161
    IN       shift, and go to state 162


State 116

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  160     | expr COMP_LE . expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 163
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 117

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  161     | expr COMP_LT . expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 164
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 118

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  162     | expr COMP_EQ . expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 165
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 119

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  164     | expr COMP_GT . expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 166
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 120

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  163     | expr COMP_GE . expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 167
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 121

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  165     | expr COMP_NE . expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 168
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 122

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  181     | expr CNNOP . expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 169
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 123

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  166     | expr LIKE . expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 170
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 124

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  177 expr: expr BETWEEN . arith_expr AND arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 171
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 125

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  179 expr: expr IN . in_expr
  182 in_expr: . select_with_parens
  183        | . '(' expr_list ')'

    '('  shift, and go to state 172

    select_with_parens  go to state 173
    in_expr             go to state 174


State 126

  171 expr: expr IS . NULLX
  172     | expr IS . NOT NULLX
  173     | expr IS . BOOL
  174     | expr IS . NOT BOOL
  175     | expr IS . UNKNOWN
  176     | expr IS . NOT UNKNOWN

    BOOL     shift, and go to state 175
    NULLX    shift, and go to state 176
    UNKNOWN  shift, and go to state 177
    NOT      shift, and go to state 178


State 127

   54 opt_asc_desc: ASC .

    $default  reduce using rule 54 (opt_asc_desc)


State 128

   55 opt_asc_desc: DESC .

    $default  reduce using rule 55 (opt_asc_desc)


State 129

   52 sort_key: expr opt_asc_desc .

    $default  reduce using rule 52 (sort_key)


State 130

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  117 expr_list: . expr
  118          | . expr ',' expr_list
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  192          | function_name '(' . '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  193          | function_name '(' . distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  194          | function_name '(' . expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  195          | function_name '(' . expr AS data_type ')'
  196          | . function_name '(' ')'
  196          | function_name '(' . ')'
  197 distinct_or_all: . ALL
  198                | . DISTINCT
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 179
    '('           shift, and go to state 65
    ')'           shift, and go to state 180
    ALL           shift, and go to state 181
    CASE          shift, and go to state 66
    DISTINCT      shift, and go to state 182
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    expr_list           go to state 183
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 184
    case_expr           go to state 76
    func_expr           go to state 77
    distinct_or_all     go to state 185
    function_name       go to state 78


State 131

   23 top_count: '(' expr . ')'
   26 top_percent: '(' expr . ')'
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ')'      shift, and go to state 186


State 132

   19 opt_top: TOP top_count WITH . TIES

    TIES  shift, and go to state 187


State 133

   20 opt_top: TOP top_percent PERCENT .  [NAME, STRING, INTNUM, BOOL, APPROXNUM, NULLX, QUESTIONMARK, NOT, '+', '-', '*', '(', CASE, EXISTS]
   21        | TOP top_percent PERCENT . WITH TIES

    WITH  shift, and go to state 188

    $default  reduce using rule 20 (opt_top)


State 134

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   32 opt_from_clause: FROM . from_list
   76 from_list: . table_factor
   77          | . table_factor ',' from_list
   78 table_factor: . table_factor_non_join
   79             | . joined_table
   80 table_factor_non_join: . relation_factor opt_with_table_hint
   81                      | . relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | . select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | . relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | . select_with_parens relation_name opt_simple_ident_list_with_parens
   97 relation_factor: . NAME
   98                | . NAME '.' NAME
   99                | . NAME '.' NAME '.' NAME
  100                | . NAME '.' '.' NAME
  101                | . NAME '.' NAME '.' NAME '.' NAME
  102                | . NAME '.' '.' NAME '.' NAME
  103                | . NAME '.' NAME '.' '.' NAME
  104                | . NAME '.' '.' '.' NAME
  105 joined_table: . '(' joined_table ')'
  106             | . table_factor join_type JOIN table_factor ON expr
  107             | . table_factor JOIN table_factor ON expr
  108             | . table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | . table_factor JOIN table_factor USING '(' simple_ident_list ')'
  110             | . table_factor CROSS JOIN table_factor

    NAME  shift, and go to state 189
    '('   shift, and go to state 190

    select_with_parens     go to state 191
    from_list              go to state 192
    table_factor           go to state 193
    table_factor_non_join  go to state 194
    relation_factor        go to state 195
    joined_table           go to state 196


State 135

   13 simple_select: SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause . opt_where opt_groupby opt_having
   29 opt_where: . %empty  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, ';']
   30          | . WHERE expr

    WHERE  shift, and go to state 197

    $default  reduce using rule 29 (opt_where)

    opt_where  go to state 198


State 136

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   70 select_expr_list: . projection
   71                 | . projection ',' select_expr_list
   71                 | projection ',' . select_expr_list
   72 projection: . expr
   73           | . expr column_label
   74           | . expr AS column_label
   75           | . '*'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '*'           shift, and go to state 86
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    select_expr_list    go to state 199
    projection          go to state 88
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 89
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 137

  201 column_label: NAME .

    $default  reduce using rule 201 (column_label)


State 138

   74 projection: expr AS . column_label
  201 column_label: . NAME

    NAME  shift, and go to state 137

    column_label  go to state 200


State 139

   73 projection: expr column_label .

    $default  reduce using rule 73 (projection)


State 140

   66 simple_ident_list: NAME ',' simple_ident_list .

    $default  reduce using rule 66 (simple_ident_list)


State 141

  120 column_ref: NAME '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  122           | NAME '.' NAME . '.' NAME
  123           | NAME '.' NAME . '.' '*'
  124           | NAME '.' NAME . '.' NAME '.' NAME
  125           | NAME '.' NAME . '.' NAME '.' '*'
  128           | NAME '.' NAME . '.' NAME '.' NAME '.' NAME
  129           | NAME '.' NAME . '.' NAME '.' NAME '.' '*'
  132           | NAME '.' NAME . '.' '.' NAME '.' NAME
  133           | NAME '.' NAME . '.' '.' NAME '.' '*'

    '.'  shift, and go to state 201

    $default  reduce using rule 120 (column_ref)


State 142

  121 column_ref: NAME '.' '*' .

    $default  reduce using rule 121 (column_ref)


State 143

  126 column_ref: NAME '.' '.' . NAME '.' NAME
  127           | NAME '.' '.' . NAME '.' '*'
  130           | NAME '.' '.' . NAME '.' NAME '.' NAME
  131           | NAME '.' '.' . NAME '.' NAME '.' '*'
  134           | NAME '.' '.' . '.' NAME '.' NAME
  135           | NAME '.' '.' . '.' NAME '.' '*'

    NAME  shift, and go to state 202
    '.'   shift, and go to state 203


State 144

  144 simple_expr: '(' expr_list ')' .

    $default  reduce using rule 144 (simple_expr)


State 145

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  117 expr_list: . expr
  118          | . expr ',' expr_list
  118          | expr ',' . expr_list
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    expr_list           go to state 204
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 99
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 146

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  189 when_clause: WHEN . expr THEN expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 205
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 147

  184 case_expr: CASE case_arg when_clause_list . case_default END
  190 case_default: . ELSE expr
  191             | . %empty  [END]

    ELSE  shift, and go to state 206

    $default  reduce using rule 191 (case_default)

    case_default  go to state 207


State 148

  187 when_clause_list: . when_clause
  187                 | when_clause .  [ELSE, END]
  188                 | . when_clause when_clause_list
  188                 | when_clause . when_clause_list
  189 when_clause: . WHEN expr THEN expr

    WHEN  shift, and go to state 146

    $default  reduce using rule 187 (when_clause_list)

    when_clause_list  go to state 208
    when_clause       go to state 148


State 149

   40 offset_fetch: OFFSET expr . ROW
   41             | OFFSET expr . ROWS
   42             | OFFSET expr . ROW FETCH FIRST expr ROW ONLY
   43             | OFFSET expr . ROW FETCH NEXT expr ROW ONLY
   44             | OFFSET expr . ROW FETCH FIRST expr ROWS ONLY
   45             | OFFSET expr . ROW FETCH NEXT expr ROWS ONLY
   46             | OFFSET expr . ROWS FETCH FIRST expr ROW ONLY
   47             | OFFSET expr . ROWS FETCH NEXT expr ROW ONLY
   48             | OFFSET expr . ROWS FETCH FIRST expr ROWS ONLY
   49             | OFFSET expr . ROWS FETCH NEXT expr ROWS ONLY
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ROW      shift, and go to state 209
    ROWS     shift, and go to state 210


State 150

   51 sort_list: sort_key ',' sort_list .

    $default  reduce using rule 51 (sort_list)


State 151

  152 arith_expr: arith_expr . '+' arith_expr
  152           | arith_expr '+' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 152 (arith_expr)

    Conflict between rule 152 and token '+' resolved as reduce (%left '+').
    Conflict between rule 152 and token '-' resolved as reduce (%left '-').
    Conflict between rule 152 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 152 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 152 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 152 and token MOD resolved as shift ('+' < MOD).
    Conflict between rule 152 and token '^' resolved as shift ('+' < '^').


State 152

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  153           | arith_expr '-' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 153 (arith_expr)

    Conflict between rule 153 and token '+' resolved as reduce (%left '+').
    Conflict between rule 153 and token '-' resolved as reduce (%left '-').
    Conflict between rule 153 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 153 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 153 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 153 and token MOD resolved as shift ('-' < MOD).
    Conflict between rule 153 and token '^' resolved as shift ('-' < '^').


State 153

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  154           | arith_expr '*' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '^'  shift, and go to state 112

    $default  reduce using rule 154 (arith_expr)

    Conflict between rule 154 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 154 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 154 and token '*' resolved as reduce (%left '*').
    Conflict between rule 154 and token '/' resolved as reduce (%left '/').
    Conflict between rule 154 and token '%' resolved as reduce (%left '%').
    Conflict between rule 154 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 154 and token '^' resolved as shift ('*' < '^').


State 154

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  155           | arith_expr '/' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '^'  shift, and go to state 112

    $default  reduce using rule 155 (arith_expr)

    Conflict between rule 155 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 155 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 155 and token '*' resolved as reduce (%left '*').
    Conflict between rule 155 and token '/' resolved as reduce (%left '/').
    Conflict between rule 155 and token '%' resolved as reduce (%left '%').
    Conflict between rule 155 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 155 and token '^' resolved as shift ('/' < '^').


State 155

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  156           | arith_expr '%' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr

    '^'  shift, and go to state 112

    $default  reduce using rule 156 (arith_expr)

    Conflict between rule 156 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 156 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 156 and token '*' resolved as reduce (%left '*').
    Conflict between rule 156 and token '/' resolved as reduce (%left '/').
    Conflict between rule 156 and token '%' resolved as reduce (%left '%').
    Conflict between rule 156 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 156 and token '^' resolved as shift ('%' < '^').


State 156

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr
  158           | arith_expr MOD arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']

    '^'  shift, and go to state 112

    $default  reduce using rule 158 (arith_expr)

    Conflict between rule 158 and token '+' resolved as reduce ('+' < MOD).
    Conflict between rule 158 and token '-' resolved as reduce ('-' < MOD).
    Conflict between rule 158 and token '*' resolved as reduce (%left '*').
    Conflict between rule 158 and token '/' resolved as reduce (%left '/').
    Conflict between rule 158 and token '%' resolved as reduce (%left '%').
    Conflict between rule 158 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 158 and token '^' resolved as shift (MOD < '^').


State 157

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  157           | arith_expr '^' arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  158           | arith_expr . MOD arith_expr

    $default  reduce using rule 157 (arith_expr)

    Conflict between rule 157 and token '+' resolved as reduce ('+' < '^').
    Conflict between rule 157 and token '-' resolved as reduce ('-' < '^').
    Conflict between rule 157 and token '*' resolved as reduce ('*' < '^').
    Conflict between rule 157 and token '/' resolved as reduce ('/' < '^').
    Conflict between rule 157 and token '%' resolved as reduce ('%' < '^').
    Conflict between rule 157 and token MOD resolved as reduce (MOD < '^').
    Conflict between rule 157 and token '^' resolved as reduce (%left '^').


State 158

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  169     | expr OR expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 169 (expr)

    Conflict between rule 169 and token OR resolved as reduce (%left OR).
    Conflict between rule 169 and token AND resolved as shift (OR < AND).
    Conflict between rule 169 and token NOT resolved as shift (OR < NOT).
    Conflict between rule 169 and token COMP_LE resolved as shift (OR < COMP_LE).
    Conflict between rule 169 and token COMP_LT resolved as shift (OR < COMP_LT).
    Conflict between rule 169 and token COMP_EQ resolved as shift (OR < COMP_EQ).
    Conflict between rule 169 and token COMP_GT resolved as shift (OR < COMP_GT).
    Conflict between rule 169 and token COMP_GE resolved as shift (OR < COMP_GE).
    Conflict between rule 169 and token COMP_NE resolved as shift (OR < COMP_NE).
    Conflict between rule 169 and token CNNOP resolved as shift (OR < CNNOP).
    Conflict between rule 169 and token LIKE resolved as shift (OR < LIKE).
    Conflict between rule 169 and token BETWEEN resolved as shift (OR < BETWEEN).
    Conflict between rule 169 and token IN resolved as shift (OR < IN).
    Conflict between rule 169 and token IS resolved as shift (OR < IS).


State 159

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  168     | expr AND expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 168 (expr)

    Conflict between rule 168 and token OR resolved as reduce (OR < AND).
    Conflict between rule 168 and token AND resolved as reduce (%left AND).
    Conflict between rule 168 and token NOT resolved as shift (AND < NOT).
    Conflict between rule 168 and token COMP_LE resolved as shift (AND < COMP_LE).
    Conflict between rule 168 and token COMP_LT resolved as shift (AND < COMP_LT).
    Conflict between rule 168 and token COMP_EQ resolved as shift (AND < COMP_EQ).
    Conflict between rule 168 and token COMP_GT resolved as shift (AND < COMP_GT).
    Conflict between rule 168 and token COMP_GE resolved as shift (AND < COMP_GE).
    Conflict between rule 168 and token COMP_NE resolved as shift (AND < COMP_NE).
    Conflict between rule 168 and token CNNOP resolved as shift (AND < CNNOP).
    Conflict between rule 168 and token LIKE resolved as shift (AND < LIKE).
    Conflict between rule 168 and token BETWEEN resolved as shift (AND < BETWEEN).
    Conflict between rule 168 and token IN resolved as shift (AND < IN).
    Conflict between rule 168 and token IS resolved as shift (AND < IS).


State 160

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  167     | expr NOT LIKE . expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 211
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 161

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  178 expr: expr NOT BETWEEN . arith_expr AND arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 212
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 162

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  180 expr: expr NOT IN . in_expr
  182 in_expr: . select_with_parens
  183        | . '(' expr_list ')'

    '('  shift, and go to state 172

    select_with_parens  go to state 173
    in_expr             go to state 213


State 163

  160 expr: expr . COMP_LE expr
  160     | expr COMP_LE expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 160 (expr)

    Conflict between rule 160 and token OR resolved as reduce (OR < COMP_LE).
    Conflict between rule 160 and token AND resolved as reduce (AND < COMP_LE).
    Conflict between rule 160 and token NOT resolved as reduce (NOT < COMP_LE).
    Conflict between rule 160 and token COMP_LE resolved as reduce (%left COMP_LE).
    Conflict between rule 160 and token COMP_LT resolved as reduce (%left COMP_LT).
    Conflict between rule 160 and token COMP_EQ resolved as reduce (%left COMP_EQ).
    Conflict between rule 160 and token COMP_GT resolved as reduce (%left COMP_GT).
    Conflict between rule 160 and token COMP_GE resolved as reduce (%left COMP_GE).
    Conflict between rule 160 and token COMP_NE resolved as reduce (%left COMP_NE).
    Conflict between rule 160 and token CNNOP resolved as shift (COMP_LE < CNNOP).
    Conflict between rule 160 and token LIKE resolved as shift (COMP_LE < LIKE).
    Conflict between rule 160 and token BETWEEN resolved as shift (COMP_LE < BETWEEN).
    Conflict between rule 160 and token IN resolved as shift (COMP_LE < IN).
    Conflict between rule 160 and token IS resolved as shift (COMP_LE < IS).


State 164

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  161     | expr COMP_LT expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 161 (expr)

    Conflict between rule 161 and token OR resolved as reduce (OR < COMP_LT).
    Conflict between rule 161 and token AND resolved as reduce (AND < COMP_LT).
    Conflict between rule 161 and token NOT resolved as reduce (NOT < COMP_LT).
    Conflict between rule 161 and token COMP_LE resolved as reduce (%left COMP_LE).
    Conflict between rule 161 and token COMP_LT resolved as reduce (%left COMP_LT).
    Conflict between rule 161 and token COMP_EQ resolved as reduce (%left COMP_EQ).
    Conflict between rule 161 and token COMP_GT resolved as reduce (%left COMP_GT).
    Conflict between rule 161 and token COMP_GE resolved as reduce (%left COMP_GE).
    Conflict between rule 161 and token COMP_NE resolved as reduce (%left COMP_NE).
    Conflict between rule 161 and token CNNOP resolved as shift (COMP_LT < CNNOP).
    Conflict between rule 161 and token LIKE resolved as shift (COMP_LT < LIKE).
    Conflict between rule 161 and token BETWEEN resolved as shift (COMP_LT < BETWEEN).
    Conflict between rule 161 and token IN resolved as shift (COMP_LT < IN).
    Conflict between rule 161 and token IS resolved as shift (COMP_LT < IS).


State 165

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  162     | expr COMP_EQ expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 162 (expr)

    Conflict between rule 162 and token OR resolved as reduce (OR < COMP_EQ).
    Conflict between rule 162 and token AND resolved as reduce (AND < COMP_EQ).
    Conflict between rule 162 and token NOT resolved as reduce (NOT < COMP_EQ).
    Conflict between rule 162 and token COMP_LE resolved as reduce (%left COMP_LE).
    Conflict between rule 162 and token COMP_LT resolved as reduce (%left COMP_LT).
    Conflict between rule 162 and token COMP_EQ resolved as reduce (%left COMP_EQ).
    Conflict between rule 162 and token COMP_GT resolved as reduce (%left COMP_GT).
    Conflict between rule 162 and token COMP_GE resolved as reduce (%left COMP_GE).
    Conflict between rule 162 and token COMP_NE resolved as reduce (%left COMP_NE).
    Conflict between rule 162 and token CNNOP resolved as shift (COMP_EQ < CNNOP).
    Conflict between rule 162 and token LIKE resolved as shift (COMP_EQ < LIKE).
    Conflict between rule 162 and token BETWEEN resolved as shift (COMP_EQ < BETWEEN).
    Conflict between rule 162 and token IN resolved as shift (COMP_EQ < IN).
    Conflict between rule 162 and token IS resolved as shift (COMP_EQ < IS).


State 166

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  164     | expr COMP_GT expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 164 (expr)

    Conflict between rule 164 and token OR resolved as reduce (OR < COMP_GT).
    Conflict between rule 164 and token AND resolved as reduce (AND < COMP_GT).
    Conflict between rule 164 and token NOT resolved as reduce (NOT < COMP_GT).
    Conflict between rule 164 and token COMP_LE resolved as reduce (%left COMP_LE).
    Conflict between rule 164 and token COMP_LT resolved as reduce (%left COMP_LT).
    Conflict between rule 164 and token COMP_EQ resolved as reduce (%left COMP_EQ).
    Conflict between rule 164 and token COMP_GT resolved as reduce (%left COMP_GT).
    Conflict between rule 164 and token COMP_GE resolved as reduce (%left COMP_GE).
    Conflict between rule 164 and token COMP_NE resolved as reduce (%left COMP_NE).
    Conflict between rule 164 and token CNNOP resolved as shift (COMP_GT < CNNOP).
    Conflict between rule 164 and token LIKE resolved as shift (COMP_GT < LIKE).
    Conflict between rule 164 and token BETWEEN resolved as shift (COMP_GT < BETWEEN).
    Conflict between rule 164 and token IN resolved as shift (COMP_GT < IN).
    Conflict between rule 164 and token IS resolved as shift (COMP_GT < IS).


State 167

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  163     | expr COMP_GE expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 163 (expr)

    Conflict between rule 163 and token OR resolved as reduce (OR < COMP_GE).
    Conflict between rule 163 and token AND resolved as reduce (AND < COMP_GE).
    Conflict between rule 163 and token NOT resolved as reduce (NOT < COMP_GE).
    Conflict between rule 163 and token COMP_LE resolved as reduce (%left COMP_LE).
    Conflict between rule 163 and token COMP_LT resolved as reduce (%left COMP_LT).
    Conflict between rule 163 and token COMP_EQ resolved as reduce (%left COMP_EQ).
    Conflict between rule 163 and token COMP_GT resolved as reduce (%left COMP_GT).
    Conflict between rule 163 and token COMP_GE resolved as reduce (%left COMP_GE).
    Conflict between rule 163 and token COMP_NE resolved as reduce (%left COMP_NE).
    Conflict between rule 163 and token CNNOP resolved as shift (COMP_GE < CNNOP).
    Conflict between rule 163 and token LIKE resolved as shift (COMP_GE < LIKE).
    Conflict between rule 163 and token BETWEEN resolved as shift (COMP_GE < BETWEEN).
    Conflict between rule 163 and token IN resolved as shift (COMP_GE < IN).
    Conflict between rule 163 and token IS resolved as shift (COMP_GE < IS).


State 168

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  165     | expr COMP_NE expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 165 (expr)

    Conflict between rule 165 and token OR resolved as reduce (OR < COMP_NE).
    Conflict between rule 165 and token AND resolved as reduce (AND < COMP_NE).
    Conflict between rule 165 and token NOT resolved as reduce (NOT < COMP_NE).
    Conflict between rule 165 and token COMP_LE resolved as reduce (%left COMP_LE).
    Conflict between rule 165 and token COMP_LT resolved as reduce (%left COMP_LT).
    Conflict between rule 165 and token COMP_EQ resolved as reduce (%left COMP_EQ).
    Conflict between rule 165 and token COMP_GT resolved as reduce (%left COMP_GT).
    Conflict between rule 165 and token COMP_GE resolved as reduce (%left COMP_GE).
    Conflict between rule 165 and token COMP_NE resolved as reduce (%left COMP_NE).
    Conflict between rule 165 and token CNNOP resolved as shift (COMP_NE < CNNOP).
    Conflict between rule 165 and token LIKE resolved as shift (COMP_NE < LIKE).
    Conflict between rule 165 and token BETWEEN resolved as shift (COMP_NE < BETWEEN).
    Conflict between rule 165 and token IN resolved as shift (COMP_NE < IN).
    Conflict between rule 165 and token IS resolved as shift (COMP_NE < IS).


State 169

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  181     | expr CNNOP expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']

    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 181 (expr)

    Conflict between rule 181 and token OR resolved as reduce (OR < CNNOP).
    Conflict between rule 181 and token AND resolved as reduce (AND < CNNOP).
    Conflict between rule 181 and token NOT resolved as reduce (NOT < CNNOP).
    Conflict between rule 181 and token COMP_LE resolved as reduce (COMP_LE < CNNOP).
    Conflict between rule 181 and token COMP_LT resolved as reduce (COMP_LT < CNNOP).
    Conflict between rule 181 and token COMP_EQ resolved as reduce (COMP_EQ < CNNOP).
    Conflict between rule 181 and token COMP_GT resolved as reduce (COMP_GT < CNNOP).
    Conflict between rule 181 and token COMP_GE resolved as reduce (COMP_GE < CNNOP).
    Conflict between rule 181 and token COMP_NE resolved as reduce (COMP_NE < CNNOP).
    Conflict between rule 181 and token CNNOP resolved as reduce (%left CNNOP).
    Conflict between rule 181 and token LIKE resolved as shift (CNNOP < LIKE).
    Conflict between rule 181 and token BETWEEN resolved as shift (CNNOP < BETWEEN).
    Conflict between rule 181 and token IN resolved as shift (CNNOP < IN).
    Conflict between rule 181 and token IS resolved as shift (CNNOP < IS).


State 170

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  166     | expr LIKE expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 166 (expr)

    Conflict between rule 166 and token OR resolved as reduce (OR < LIKE).
    Conflict between rule 166 and token AND resolved as reduce (AND < LIKE).
    Conflict between rule 166 and token NOT resolved as reduce (NOT < LIKE).
    Conflict between rule 166 and token COMP_LE resolved as reduce (COMP_LE < LIKE).
    Conflict between rule 166 and token COMP_LT resolved as reduce (COMP_LT < LIKE).
    Conflict between rule 166 and token COMP_EQ resolved as reduce (COMP_EQ < LIKE).
    Conflict between rule 166 and token COMP_GT resolved as reduce (COMP_GT < LIKE).
    Conflict between rule 166 and token COMP_GE resolved as reduce (COMP_GE < LIKE).
    Conflict between rule 166 and token COMP_NE resolved as reduce (COMP_NE < LIKE).
    Conflict between rule 166 and token CNNOP resolved as reduce (CNNOP < LIKE).
    Conflict between rule 166 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 166 and token BETWEEN resolved as shift (LIKE < BETWEEN).
    Conflict between rule 166 and token IN resolved as shift (LIKE < IN).
    Conflict between rule 166 and token IS resolved as shift (LIKE < IS).


State 171

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr
  177 expr: expr BETWEEN arith_expr . AND arith_expr

    AND  shift, and go to state 214
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112


State 172

    7 select_with_parens: . '(' select_no_parens ')'
    7                   | '(' . select_no_parens ')'
    8                   | . '(' select_with_parens ')'
    8                   | '(' . select_with_parens ')'
    9 select_no_parens: . select_clause opt_order_by opt_for_clause
   10                 | . with_clause select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   58 with_clause: . WITH with_list
  117 expr_list: . expr
  118          | . expr ',' expr_list
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  183 in_expr: '(' . expr_list ')'
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67
    SELECT        shift, and go to state 2
    WITH          shift, and go to state 3

    select_with_parens  go to state 97
    select_no_parens    go to state 14
    select_clause       go to state 10
    simple_select       go to state 11
    with_clause         go to state 12
    expr_list           go to state 215
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 99
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 173

  182 in_expr: select_with_parens .

    $default  reduce using rule 182 (in_expr)


State 174

  179 expr: expr IN in_expr .

    $default  reduce using rule 179 (expr)


State 175

  173 expr: expr IS BOOL .

    $default  reduce using rule 173 (expr)


State 176

  171 expr: expr IS NULLX .

    $default  reduce using rule 171 (expr)


State 177

  175 expr: expr IS UNKNOWN .

    $default  reduce using rule 175 (expr)


State 178

  172 expr: expr IS NOT . NULLX
  174     | expr IS NOT . BOOL
  176     | expr IS NOT . UNKNOWN

    BOOL     shift, and go to state 216
    NULLX    shift, and go to state 217
    UNKNOWN  shift, and go to state 218


State 179

  192 func_expr: function_name '(' '*' . ')'

    ')'  shift, and go to state 219


State 180

  196 func_expr: function_name '(' ')' .

    $default  reduce using rule 196 (func_expr)


State 181

  197 distinct_or_all: ALL .

    $default  reduce using rule 197 (distinct_or_all)


State 182

  198 distinct_or_all: DISTINCT .

    $default  reduce using rule 198 (distinct_or_all)


State 183

  194 func_expr: function_name '(' expr_list . ')'

    ')'  shift, and go to state 220


State 184

  117 expr_list: expr .  [')']
  118          | expr . ',' expr_list
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  195 func_expr: function_name '(' expr . AS data_type ')'

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    AS       shift, and go to state 221
    ','      shift, and go to state 145

    $default  reduce using rule 117 (expr_list)


State 185

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  193          | function_name '(' distinct_or_all . expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 222
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 186

   23 top_count: '(' expr ')' .  [NAME, STRING, INTNUM, BOOL, APPROXNUM, NULLX, QUESTIONMARK, NOT, '+', '-', '*', '(', CASE, EXISTS, WITH]
   26 top_percent: '(' expr ')' .  [PERCENT]

    PERCENT   reduce using rule 26 (top_percent)
    $default  reduce using rule 23 (top_count)


State 187

   19 opt_top: TOP top_count WITH TIES .

    $default  reduce using rule 19 (opt_top)


State 188

   21 opt_top: TOP top_percent PERCENT WITH . TIES

    TIES  shift, and go to state 223


State 189

   97 relation_factor: NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', AS, END_P, FOR, GROUP, HAVING, ORDER, WHERE, WITH, ';', ',']
   98                | NAME . '.' NAME
   99                | NAME . '.' NAME '.' NAME
  100                | NAME . '.' '.' NAME
  101                | NAME . '.' NAME '.' NAME '.' NAME
  102                | NAME . '.' '.' NAME '.' NAME
  103                | NAME . '.' NAME '.' '.' NAME
  104                | NAME . '.' '.' '.' NAME

    '.'  shift, and go to state 224

    $default  reduce using rule 97 (relation_factor)


State 190

    7 select_with_parens: . '(' select_no_parens ')'
    7                   | '(' . select_no_parens ')'
    8                   | . '(' select_with_parens ')'
    8                   | '(' . select_with_parens ')'
    9 select_no_parens: . select_clause opt_order_by opt_for_clause
   10                 | . with_clause select_clause opt_order_by opt_for_clause
   11 select_clause: . simple_select
   12              | . select_with_parens
   13 simple_select: . SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having
   14              | . select_clause UNION opt_distinct select_clause
   15              | . select_clause INTERSECT opt_distinct select_clause
   16              | . select_clause EXCEPT opt_distinct select_clause
   58 with_clause: . WITH with_list
   78 table_factor: . table_factor_non_join
   79             | . joined_table
   80 table_factor_non_join: . relation_factor opt_with_table_hint
   81                      | . relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | . select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | . relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | . select_with_parens relation_name opt_simple_ident_list_with_parens
   97 relation_factor: . NAME
   98                | . NAME '.' NAME
   99                | . NAME '.' NAME '.' NAME
  100                | . NAME '.' '.' NAME
  101                | . NAME '.' NAME '.' NAME '.' NAME
  102                | . NAME '.' '.' NAME '.' NAME
  103                | . NAME '.' NAME '.' '.' NAME
  104                | . NAME '.' '.' '.' NAME
  105 joined_table: . '(' joined_table ')'
  105             | '(' . joined_table ')'
  106             | . table_factor join_type JOIN table_factor ON expr
  107             | . table_factor JOIN table_factor ON expr
  108             | . table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | . table_factor JOIN table_factor USING '(' simple_ident_list ')'
  110             | . table_factor CROSS JOIN table_factor

    NAME    shift, and go to state 189
    '('     shift, and go to state 190
    SELECT  shift, and go to state 2
    WITH    shift, and go to state 3

    select_with_parens     go to state 225
    select_no_parens       go to state 14
    select_clause          go to state 10
    simple_select          go to state 11
    with_clause            go to state 12
    table_factor           go to state 226
    table_factor_non_join  go to state 194
    relation_factor        go to state 195
    joined_table           go to state 227


State 191

   82 table_factor_non_join: select_with_parens . AS relation_name opt_simple_ident_list_with_parens
   84                      | select_with_parens . relation_name opt_simple_ident_list_with_parens
  199 relation_name: . NAME

    NAME  shift, and go to state 228
    AS    shift, and go to state 229

    relation_name  go to state 230


State 192

   32 opt_from_clause: FROM from_list .

    $default  reduce using rule 32 (opt_from_clause)


State 193

   76 from_list: table_factor .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';']
   77          | table_factor . ',' from_list
  106 joined_table: table_factor . join_type JOIN table_factor ON expr
  107             | table_factor . JOIN table_factor ON expr
  108             | table_factor . join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor . JOIN table_factor USING '(' simple_ident_list ')'
  110             | table_factor . CROSS JOIN table_factor
  111 join_type: . FULL join_outer
  112          | . LEFT join_outer
  113          | . RIGHT join_outer
  114          | . INNER

    CROSS  shift, and go to state 231
    FULL   shift, and go to state 232
    INNER  shift, and go to state 233
    JOIN   shift, and go to state 234
    LEFT   shift, and go to state 235
    RIGHT  shift, and go to state 236
    ','    shift, and go to state 237

    $default  reduce using rule 76 (from_list)

    join_type  go to state 238


State 194

   78 table_factor: table_factor_non_join .

    $default  reduce using rule 78 (table_factor)


State 195

   80 table_factor_non_join: relation_factor . opt_with_table_hint
   81                      | relation_factor . AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   83                      | relation_factor . relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   85 opt_with_table_hint: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
   86                    | . WITH '(' table_hint_list ')'
  199 relation_name: . NAME

    NAME  shift, and go to state 228
    AS    shift, and go to state 239
    WITH  shift, and go to state 240

    $default  reduce using rule 85 (opt_with_table_hint)

    opt_with_table_hint  go to state 241
    relation_name        go to state 242


State 196

   79 table_factor: joined_table .

    $default  reduce using rule 79 (table_factor)


State 197

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   30 opt_where: WHERE . expr
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 243
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 198

   13 simple_select: SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where . opt_groupby opt_having
   34 opt_groupby: . %empty  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, HAVING, ORDER, ';']
   35            | . GROUP BY expr_list

    GROUP  shift, and go to state 244

    $default  reduce using rule 34 (opt_groupby)

    opt_groupby  go to state 245


State 199

   71 select_expr_list: projection ',' select_expr_list .

    $default  reduce using rule 71 (select_expr_list)


State 200

   74 projection: expr AS column_label .

    $default  reduce using rule 74 (projection)


State 201

  122 column_ref: NAME '.' NAME '.' . NAME
  123           | NAME '.' NAME '.' . '*'
  124           | NAME '.' NAME '.' . NAME '.' NAME
  125           | NAME '.' NAME '.' . NAME '.' '*'
  128           | NAME '.' NAME '.' . NAME '.' NAME '.' NAME
  129           | NAME '.' NAME '.' . NAME '.' NAME '.' '*'
  132           | NAME '.' NAME '.' . '.' NAME '.' NAME
  133           | NAME '.' NAME '.' . '.' NAME '.' '*'

    NAME  shift, and go to state 246
    '*'   shift, and go to state 247
    '.'   shift, and go to state 248


State 202

  126 column_ref: NAME '.' '.' NAME . '.' NAME
  127           | NAME '.' '.' NAME . '.' '*'
  130           | NAME '.' '.' NAME . '.' NAME '.' NAME
  131           | NAME '.' '.' NAME . '.' NAME '.' '*'

    '.'  shift, and go to state 249


State 203

  134 column_ref: NAME '.' '.' '.' . NAME '.' NAME
  135           | NAME '.' '.' '.' . NAME '.' '*'

    NAME  shift, and go to state 250


State 204

  118 expr_list: expr ',' expr_list .

    $default  reduce using rule 118 (expr_list)


State 205

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  189 when_clause: WHEN expr . THEN expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    THEN     shift, and go to state 251


State 206

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  190 case_default: ELSE . expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 252
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 207

  184 case_expr: CASE case_arg when_clause_list case_default . END

    END  shift, and go to state 253


State 208

  188 when_clause_list: when_clause when_clause_list .

    $default  reduce using rule 188 (when_clause_list)


State 209

   40 offset_fetch: OFFSET expr ROW .  [')', END_P, FOR, ';']
   42             | OFFSET expr ROW . FETCH FIRST expr ROW ONLY
   43             | OFFSET expr ROW . FETCH NEXT expr ROW ONLY
   44             | OFFSET expr ROW . FETCH FIRST expr ROWS ONLY
   45             | OFFSET expr ROW . FETCH NEXT expr ROWS ONLY

    FETCH  shift, and go to state 254

    $default  reduce using rule 40 (offset_fetch)


State 210

   41 offset_fetch: OFFSET expr ROWS .  [')', END_P, FOR, ';']
   46             | OFFSET expr ROWS . FETCH FIRST expr ROW ONLY
   47             | OFFSET expr ROWS . FETCH NEXT expr ROW ONLY
   48             | OFFSET expr ROWS . FETCH FIRST expr ROWS ONLY
   49             | OFFSET expr ROWS . FETCH NEXT expr ROWS ONLY

    FETCH  shift, and go to state 255

    $default  reduce using rule 41 (offset_fetch)


State 211

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  167     | expr NOT LIKE expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 167 (expr)

    Conflict between rule 167 and token OR resolved as reduce (OR < LIKE).
    Conflict between rule 167 and token AND resolved as reduce (AND < LIKE).
    Conflict between rule 167 and token NOT resolved as reduce (NOT < LIKE).
    Conflict between rule 167 and token COMP_LE resolved as reduce (COMP_LE < LIKE).
    Conflict between rule 167 and token COMP_LT resolved as reduce (COMP_LT < LIKE).
    Conflict between rule 167 and token COMP_EQ resolved as reduce (COMP_EQ < LIKE).
    Conflict between rule 167 and token COMP_GT resolved as reduce (COMP_GT < LIKE).
    Conflict between rule 167 and token COMP_GE resolved as reduce (COMP_GE < LIKE).
    Conflict between rule 167 and token COMP_NE resolved as reduce (COMP_NE < LIKE).
    Conflict between rule 167 and token CNNOP resolved as reduce (CNNOP < LIKE).
    Conflict between rule 167 and token LIKE resolved as reduce (%left LIKE).
    Conflict between rule 167 and token BETWEEN resolved as shift (LIKE < BETWEEN).
    Conflict between rule 167 and token IN resolved as shift (LIKE < IN).
    Conflict between rule 167 and token IS resolved as shift (LIKE < IS).


State 212

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr
  178 expr: expr NOT BETWEEN arith_expr . AND arith_expr

    AND  shift, and go to state 256
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112


State 213

  180 expr: expr NOT IN in_expr .

    $default  reduce using rule 180 (expr)


State 214

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  177 expr: expr BETWEEN arith_expr AND . arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 257
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 215

  183 in_expr: '(' expr_list . ')'

    ')'  shift, and go to state 258


State 216

  174 expr: expr IS NOT BOOL .

    $default  reduce using rule 174 (expr)


State 217

  172 expr: expr IS NOT NULLX .

    $default  reduce using rule 172 (expr)


State 218

  176 expr: expr IS NOT UNKNOWN .

    $default  reduce using rule 176 (expr)


State 219

  192 func_expr: function_name '(' '*' ')' .

    $default  reduce using rule 192 (func_expr)


State 220

  194 func_expr: function_name '(' expr_list ')' .

    $default  reduce using rule 194 (func_expr)


State 221

  195 func_expr: function_name '(' expr AS . data_type ')'
  202 data_type: . TINYINT
  203          | . SMALLINT
  204          | . MEDIUMINT
  205          | . INTEGER
  206          | . BIGINT
  207          | . BOOLEAN
  208          | . REAL
  209          | . DATETIME

    BIGINT     shift, and go to state 259
    BOOLEAN    shift, and go to state 260
    DATETIME   shift, and go to state 261
    INTEGER    shift, and go to state 262
    MEDIUMINT  shift, and go to state 263
    REAL       shift, and go to state 264
    SMALLINT   shift, and go to state 265
    TINYINT    shift, and go to state 266

    data_type  go to state 267


State 222

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  193 func_expr: function_name '(' distinct_or_all expr . ')'

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ')'      shift, and go to state 268


State 223

   21 opt_top: TOP top_percent PERCENT WITH TIES .

    $default  reduce using rule 21 (opt_top)


State 224

   98 relation_factor: NAME '.' . NAME
   99                | NAME '.' . NAME '.' NAME
  100                | NAME '.' . '.' NAME
  101                | NAME '.' . NAME '.' NAME '.' NAME
  102                | NAME '.' . '.' NAME '.' NAME
  103                | NAME '.' . NAME '.' '.' NAME
  104                | NAME '.' . '.' '.' NAME

    NAME  shift, and go to state 269
    '.'   shift, and go to state 270


State 225

    8 select_with_parens: '(' select_with_parens . ')'
   12 select_clause: select_with_parens .  [UNION, EXCEPT, INTERSECT, FOR, ORDER]
   82 table_factor_non_join: select_with_parens . AS relation_name opt_simple_ident_list_with_parens
   84                      | select_with_parens . relation_name opt_simple_ident_list_with_parens
  199 relation_name: . NAME

    NAME  shift, and go to state 228
    ')'   shift, and go to state 29
    AS    shift, and go to state 229

    $default  reduce using rule 12 (select_clause)

    relation_name  go to state 230

    Conflict between rule 12 and token ')' resolved as shift (UMINUS < ')').


State 226

  106 joined_table: table_factor . join_type JOIN table_factor ON expr
  107             | table_factor . JOIN table_factor ON expr
  108             | table_factor . join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor . JOIN table_factor USING '(' simple_ident_list ')'
  110             | table_factor . CROSS JOIN table_factor
  111 join_type: . FULL join_outer
  112          | . LEFT join_outer
  113          | . RIGHT join_outer
  114          | . INNER

    CROSS  shift, and go to state 231
    FULL   shift, and go to state 232
    INNER  shift, and go to state 233
    JOIN   shift, and go to state 234
    LEFT   shift, and go to state 235
    RIGHT  shift, and go to state 236

    join_type  go to state 238


State 227

   79 table_factor: joined_table .  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT]
  105 joined_table: '(' joined_table . ')'

    ')'  shift, and go to state 271

    $default  reduce using rule 79 (table_factor)


State 228

  199 relation_name: NAME .

    $default  reduce using rule 199 (relation_name)


State 229

   82 table_factor_non_join: select_with_parens AS . relation_name opt_simple_ident_list_with_parens
  199 relation_name: . NAME

    NAME  shift, and go to state 228

    relation_name  go to state 272


State 230

   64 simple_ident_list_with_parens: . '(' simple_ident_list ')'
   84 table_factor_non_join: select_with_parens relation_name . opt_simple_ident_list_with_parens
   95 opt_simple_ident_list_with_parens: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
   96                                  | . simple_ident_list_with_parens

    '('  shift, and go to state 34

    $default  reduce using rule 95 (opt_simple_ident_list_with_parens)

    simple_ident_list_with_parens      go to state 273
    opt_simple_ident_list_with_parens  go to state 274


State 231

  110 joined_table: table_factor CROSS . JOIN table_factor

    JOIN  shift, and go to state 275


State 232

  111 join_type: FULL . join_outer
  115 join_outer: . OUTER
  116           | . %empty  [JOIN]

    OUTER  shift, and go to state 276

    $default  reduce using rule 116 (join_outer)

    join_outer  go to state 277


State 233

  114 join_type: INNER .

    $default  reduce using rule 114 (join_type)


State 234

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   78 table_factor: . table_factor_non_join
   79             | . joined_table
   80 table_factor_non_join: . relation_factor opt_with_table_hint
   81                      | . relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | . select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | . relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | . select_with_parens relation_name opt_simple_ident_list_with_parens
   97 relation_factor: . NAME
   98                | . NAME '.' NAME
   99                | . NAME '.' NAME '.' NAME
  100                | . NAME '.' '.' NAME
  101                | . NAME '.' NAME '.' NAME '.' NAME
  102                | . NAME '.' '.' NAME '.' NAME
  103                | . NAME '.' NAME '.' '.' NAME
  104                | . NAME '.' '.' '.' NAME
  105 joined_table: . '(' joined_table ')'
  106             | . table_factor join_type JOIN table_factor ON expr
  107             | . table_factor JOIN table_factor ON expr
  107             | table_factor JOIN . table_factor ON expr
  108             | . table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | . table_factor JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor JOIN . table_factor USING '(' simple_ident_list ')'
  110             | . table_factor CROSS JOIN table_factor

    NAME  shift, and go to state 189
    '('   shift, and go to state 190

    select_with_parens     go to state 191
    table_factor           go to state 278
    table_factor_non_join  go to state 194
    relation_factor        go to state 195
    joined_table           go to state 196


State 235

  112 join_type: LEFT . join_outer
  115 join_outer: . OUTER
  116           | . %empty  [JOIN]

    OUTER  shift, and go to state 276

    $default  reduce using rule 116 (join_outer)

    join_outer  go to state 279


State 236

  113 join_type: RIGHT . join_outer
  115 join_outer: . OUTER
  116           | . %empty  [JOIN]

    OUTER  shift, and go to state 276

    $default  reduce using rule 116 (join_outer)

    join_outer  go to state 280


State 237

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   76 from_list: . table_factor
   77          | . table_factor ',' from_list
   77          | table_factor ',' . from_list
   78 table_factor: . table_factor_non_join
   79             | . joined_table
   80 table_factor_non_join: . relation_factor opt_with_table_hint
   81                      | . relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | . select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | . relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | . select_with_parens relation_name opt_simple_ident_list_with_parens
   97 relation_factor: . NAME
   98                | . NAME '.' NAME
   99                | . NAME '.' NAME '.' NAME
  100                | . NAME '.' '.' NAME
  101                | . NAME '.' NAME '.' NAME '.' NAME
  102                | . NAME '.' '.' NAME '.' NAME
  103                | . NAME '.' NAME '.' '.' NAME
  104                | . NAME '.' '.' '.' NAME
  105 joined_table: . '(' joined_table ')'
  106             | . table_factor join_type JOIN table_factor ON expr
  107             | . table_factor JOIN table_factor ON expr
  108             | . table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | . table_factor JOIN table_factor USING '(' simple_ident_list ')'
  110             | . table_factor CROSS JOIN table_factor

    NAME  shift, and go to state 189
    '('   shift, and go to state 190

    select_with_parens     go to state 191
    from_list              go to state 281
    table_factor           go to state 193
    table_factor_non_join  go to state 194
    relation_factor        go to state 195
    joined_table           go to state 196


State 238

  106 joined_table: table_factor join_type . JOIN table_factor ON expr
  108             | table_factor join_type . JOIN table_factor USING '(' simple_ident_list ')'

    JOIN  shift, and go to state 282


State 239

   81 table_factor_non_join: relation_factor AS . relation_name opt_simple_ident_list_with_parens opt_with_table_hint
  199 relation_name: . NAME

    NAME  shift, and go to state 228

    relation_name  go to state 283


State 240

   86 opt_with_table_hint: WITH . '(' table_hint_list ')'

    '('  shift, and go to state 284


State 241

   80 table_factor_non_join: relation_factor opt_with_table_hint .

    $default  reduce using rule 80 (table_factor_non_join)


State 242

   64 simple_ident_list_with_parens: . '(' simple_ident_list ')'
   83 table_factor_non_join: relation_factor relation_name . opt_simple_ident_list_with_parens opt_with_table_hint
   95 opt_simple_ident_list_with_parens: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, WITH, ';', ',']
   96                                  | . simple_ident_list_with_parens

    '('  shift, and go to state 34

    $default  reduce using rule 95 (opt_simple_ident_list_with_parens)

    simple_ident_list_with_parens      go to state 273
    opt_simple_ident_list_with_parens  go to state 285


State 243

   30 opt_where: WHERE expr .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, ';']
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 30 (opt_where)


State 244

   35 opt_groupby: GROUP . BY expr_list

    BY  shift, and go to state 286


State 245

   13 simple_select: SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby . opt_having
   56 opt_having: . %empty  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, ORDER, ';']
   57           | . HAVING expr

    HAVING  shift, and go to state 287

    $default  reduce using rule 56 (opt_having)

    opt_having  go to state 288


State 246

  122 column_ref: NAME '.' NAME '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  124           | NAME '.' NAME '.' NAME . '.' NAME
  125           | NAME '.' NAME '.' NAME . '.' '*'
  128           | NAME '.' NAME '.' NAME . '.' NAME '.' NAME
  129           | NAME '.' NAME '.' NAME . '.' NAME '.' '*'

    '.'  shift, and go to state 289

    $default  reduce using rule 122 (column_ref)


State 247

  123 column_ref: NAME '.' NAME '.' '*' .

    $default  reduce using rule 123 (column_ref)


State 248

  132 column_ref: NAME '.' NAME '.' '.' . NAME '.' NAME
  133           | NAME '.' NAME '.' '.' . NAME '.' '*'

    NAME  shift, and go to state 290


State 249

  126 column_ref: NAME '.' '.' NAME '.' . NAME
  127           | NAME '.' '.' NAME '.' . '*'
  130           | NAME '.' '.' NAME '.' . NAME '.' NAME
  131           | NAME '.' '.' NAME '.' . NAME '.' '*'

    NAME  shift, and go to state 291
    '*'   shift, and go to state 292


State 250

  134 column_ref: NAME '.' '.' '.' NAME . '.' NAME
  135           | NAME '.' '.' '.' NAME . '.' '*'

    '.'  shift, and go to state 293


State 251

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  189 when_clause: WHEN expr THEN . expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 294
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 252

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  190 case_default: ELSE expr .  [END]

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 190 (case_default)


State 253

  184 case_expr: CASE case_arg when_clause_list case_default END .

    $default  reduce using rule 184 (case_expr)


State 254

   42 offset_fetch: OFFSET expr ROW FETCH . FIRST expr ROW ONLY
   43             | OFFSET expr ROW FETCH . NEXT expr ROW ONLY
   44             | OFFSET expr ROW FETCH . FIRST expr ROWS ONLY
   45             | OFFSET expr ROW FETCH . NEXT expr ROWS ONLY

    FIRST  shift, and go to state 295
    NEXT   shift, and go to state 296


State 255

   46 offset_fetch: OFFSET expr ROWS FETCH . FIRST expr ROW ONLY
   47             | OFFSET expr ROWS FETCH . NEXT expr ROW ONLY
   48             | OFFSET expr ROWS FETCH . FIRST expr ROWS ONLY
   49             | OFFSET expr ROWS FETCH . NEXT expr ROWS ONLY

    FIRST  shift, and go to state 297
    NEXT   shift, and go to state 298


State 256

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  178 expr: expr NOT BETWEEN arith_expr AND . arith_expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 299
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 257

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr
  177 expr: expr BETWEEN arith_expr AND arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 177 (expr)


State 258

  183 in_expr: '(' expr_list ')' .

    $default  reduce using rule 183 (in_expr)


State 259

  206 data_type: BIGINT .

    $default  reduce using rule 206 (data_type)


State 260

  207 data_type: BOOLEAN .

    $default  reduce using rule 207 (data_type)


State 261

  209 data_type: DATETIME .

    $default  reduce using rule 209 (data_type)


State 262

  205 data_type: INTEGER .

    $default  reduce using rule 205 (data_type)


State 263

  204 data_type: MEDIUMINT .

    $default  reduce using rule 204 (data_type)


State 264

  208 data_type: REAL .

    $default  reduce using rule 208 (data_type)


State 265

  203 data_type: SMALLINT .

    $default  reduce using rule 203 (data_type)


State 266

  202 data_type: TINYINT .

    $default  reduce using rule 202 (data_type)


State 267

  195 func_expr: function_name '(' expr AS data_type . ')'

    ')'  shift, and go to state 300


State 268

  193 func_expr: function_name '(' distinct_or_all expr ')' .

    $default  reduce using rule 193 (func_expr)


State 269

   98 relation_factor: NAME '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', AS, END_P, FOR, GROUP, HAVING, ORDER, WHERE, WITH, ';', ',']
   99                | NAME '.' NAME . '.' NAME
  101                | NAME '.' NAME . '.' NAME '.' NAME
  103                | NAME '.' NAME . '.' '.' NAME

    '.'  shift, and go to state 301

    $default  reduce using rule 98 (relation_factor)


State 270

  100 relation_factor: NAME '.' '.' . NAME
  102                | NAME '.' '.' . NAME '.' NAME
  104                | NAME '.' '.' . '.' NAME

    NAME  shift, and go to state 302
    '.'   shift, and go to state 303


State 271

  105 joined_table: '(' joined_table ')' .

    $default  reduce using rule 105 (joined_table)


State 272

   64 simple_ident_list_with_parens: . '(' simple_ident_list ')'
   82 table_factor_non_join: select_with_parens AS relation_name . opt_simple_ident_list_with_parens
   95 opt_simple_ident_list_with_parens: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
   96                                  | . simple_ident_list_with_parens

    '('  shift, and go to state 34

    $default  reduce using rule 95 (opt_simple_ident_list_with_parens)

    simple_ident_list_with_parens      go to state 273
    opt_simple_ident_list_with_parens  go to state 304


State 273

   96 opt_simple_ident_list_with_parens: simple_ident_list_with_parens .

    $default  reduce using rule 96 (opt_simple_ident_list_with_parens)


State 274

   84 table_factor_non_join: select_with_parens relation_name opt_simple_ident_list_with_parens .

    $default  reduce using rule 84 (table_factor_non_join)


State 275

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   78 table_factor: . table_factor_non_join
   79             | . joined_table
   80 table_factor_non_join: . relation_factor opt_with_table_hint
   81                      | . relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | . select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | . relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | . select_with_parens relation_name opt_simple_ident_list_with_parens
   97 relation_factor: . NAME
   98                | . NAME '.' NAME
   99                | . NAME '.' NAME '.' NAME
  100                | . NAME '.' '.' NAME
  101                | . NAME '.' NAME '.' NAME '.' NAME
  102                | . NAME '.' '.' NAME '.' NAME
  103                | . NAME '.' NAME '.' '.' NAME
  104                | . NAME '.' '.' '.' NAME
  105 joined_table: . '(' joined_table ')'
  106             | . table_factor join_type JOIN table_factor ON expr
  107             | . table_factor JOIN table_factor ON expr
  108             | . table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | . table_factor JOIN table_factor USING '(' simple_ident_list ')'
  110             | . table_factor CROSS JOIN table_factor
  110             | table_factor CROSS JOIN . table_factor

    NAME  shift, and go to state 189
    '('   shift, and go to state 190

    select_with_parens     go to state 191
    table_factor           go to state 305
    table_factor_non_join  go to state 194
    relation_factor        go to state 195
    joined_table           go to state 196


State 276

  115 join_outer: OUTER .

    $default  reduce using rule 115 (join_outer)


State 277

  111 join_type: FULL join_outer .

    $default  reduce using rule 111 (join_type)


State 278

  106 joined_table: table_factor . join_type JOIN table_factor ON expr
  107             | table_factor . JOIN table_factor ON expr
  107             | table_factor JOIN table_factor . ON expr
  108             | table_factor . join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor . JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor JOIN table_factor . USING '(' simple_ident_list ')'
  110             | table_factor . CROSS JOIN table_factor
  111 join_type: . FULL join_outer
  112          | . LEFT join_outer
  113          | . RIGHT join_outer
  114          | . INNER

    CROSS  shift, and go to state 231
    FULL   shift, and go to state 232
    INNER  shift, and go to state 233
    JOIN   shift, and go to state 234
    LEFT   shift, and go to state 235
    RIGHT  shift, and go to state 236
    ON     shift, and go to state 306
    USING  shift, and go to state 307

    join_type  go to state 238


State 279

  112 join_type: LEFT join_outer .

    $default  reduce using rule 112 (join_type)


State 280

  113 join_type: RIGHT join_outer .

    $default  reduce using rule 113 (join_type)


State 281

   77 from_list: table_factor ',' from_list .

    $default  reduce using rule 77 (from_list)


State 282

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   78 table_factor: . table_factor_non_join
   79             | . joined_table
   80 table_factor_non_join: . relation_factor opt_with_table_hint
   81                      | . relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   82                      | . select_with_parens AS relation_name opt_simple_ident_list_with_parens
   83                      | . relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint
   84                      | . select_with_parens relation_name opt_simple_ident_list_with_parens
   97 relation_factor: . NAME
   98                | . NAME '.' NAME
   99                | . NAME '.' NAME '.' NAME
  100                | . NAME '.' '.' NAME
  101                | . NAME '.' NAME '.' NAME '.' NAME
  102                | . NAME '.' '.' NAME '.' NAME
  103                | . NAME '.' NAME '.' '.' NAME
  104                | . NAME '.' '.' '.' NAME
  105 joined_table: . '(' joined_table ')'
  106             | . table_factor join_type JOIN table_factor ON expr
  106             | table_factor join_type JOIN . table_factor ON expr
  107             | . table_factor JOIN table_factor ON expr
  108             | . table_factor join_type JOIN table_factor USING '(' simple_ident_list ')'
  108             | table_factor join_type JOIN . table_factor USING '(' simple_ident_list ')'
  109             | . table_factor JOIN table_factor USING '(' simple_ident_list ')'
  110             | . table_factor CROSS JOIN table_factor

    NAME  shift, and go to state 189
    '('   shift, and go to state 190

    select_with_parens     go to state 191
    table_factor           go to state 308
    table_factor_non_join  go to state 194
    relation_factor        go to state 195
    joined_table           go to state 196


State 283

   64 simple_ident_list_with_parens: . '(' simple_ident_list ')'
   81 table_factor_non_join: relation_factor AS relation_name . opt_simple_ident_list_with_parens opt_with_table_hint
   95 opt_simple_ident_list_with_parens: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, WITH, ';', ',']
   96                                  | . simple_ident_list_with_parens

    '('  shift, and go to state 34

    $default  reduce using rule 95 (opt_simple_ident_list_with_parens)

    simple_ident_list_with_parens      go to state 273
    opt_simple_ident_list_with_parens  go to state 309


State 284

   86 opt_with_table_hint: WITH '(' . table_hint_list ')'
   87 table_hint_list: . table_hint
   88                | . table_hint ',' table_hint_list
   89                | . table_hint table_hint_list
   90 table_hint: . table_hint_expr
   91           | . NOEXPAND table_hint_expr
   92 table_hint_expr: . func_expr
   93                | . NAME
   94                | . NAME COMP_EQ expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME      shift, and go to state 310
    NOEXPAND  shift, and go to state 311

    table_hint_list  go to state 312
    table_hint       go to state 313
    table_hint_expr  go to state 314
    func_expr        go to state 315
    function_name    go to state 78


State 285

   83 table_factor_non_join: relation_factor relation_name opt_simple_ident_list_with_parens . opt_with_table_hint
   85 opt_with_table_hint: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
   86                    | . WITH '(' table_hint_list ')'

    WITH  shift, and go to state 240

    $default  reduce using rule 85 (opt_with_table_hint)

    opt_with_table_hint  go to state 316


State 286

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   35 opt_groupby: GROUP BY . expr_list
  117 expr_list: . expr
  118          | . expr ',' expr_list
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    expr_list           go to state 317
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 99
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 287

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   57 opt_having: HAVING . expr
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 318
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 288

   13 simple_select: SELECT opt_hint opt_distinct opt_top select_expr_list opt_from_clause opt_where opt_groupby opt_having .

    $default  reduce using rule 13 (simple_select)


State 289

  124 column_ref: NAME '.' NAME '.' NAME '.' . NAME
  125           | NAME '.' NAME '.' NAME '.' . '*'
  128           | NAME '.' NAME '.' NAME '.' . NAME '.' NAME
  129           | NAME '.' NAME '.' NAME '.' . NAME '.' '*'

    NAME  shift, and go to state 319
    '*'   shift, and go to state 320


State 290

  132 column_ref: NAME '.' NAME '.' '.' NAME . '.' NAME
  133           | NAME '.' NAME '.' '.' NAME . '.' '*'

    '.'  shift, and go to state 321


State 291

  126 column_ref: NAME '.' '.' NAME '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  130           | NAME '.' '.' NAME '.' NAME . '.' NAME
  131           | NAME '.' '.' NAME '.' NAME . '.' '*'

    '.'  shift, and go to state 322

    $default  reduce using rule 126 (column_ref)


State 292

  127 column_ref: NAME '.' '.' NAME '.' '*' .

    $default  reduce using rule 127 (column_ref)


State 293

  134 column_ref: NAME '.' '.' '.' NAME '.' . NAME
  135           | NAME '.' '.' '.' NAME '.' . '*'

    NAME  shift, and go to state 323
    '*'   shift, and go to state 324


State 294

  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr
  189 when_clause: WHEN expr THEN expr .  [ELSE, END, WHEN]

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 189 (when_clause)


State 295

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   42 offset_fetch: OFFSET expr ROW FETCH FIRST . expr ROW ONLY
   44             | OFFSET expr ROW FETCH FIRST . expr ROWS ONLY
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 325
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 296

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   43 offset_fetch: OFFSET expr ROW FETCH NEXT . expr ROW ONLY
   45             | OFFSET expr ROW FETCH NEXT . expr ROWS ONLY
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 326
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 297

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   46 offset_fetch: OFFSET expr ROWS FETCH FIRST . expr ROW ONLY
   48             | OFFSET expr ROWS FETCH FIRST . expr ROWS ONLY
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 327
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 298

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   47 offset_fetch: OFFSET expr ROWS FETCH NEXT . expr ROW ONLY
   49             | OFFSET expr ROWS FETCH NEXT . expr ROWS ONLY
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 328
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 299

  152 arith_expr: arith_expr . '+' arith_expr
  153           | arith_expr . '-' arith_expr
  154           | arith_expr . '*' arith_expr
  155           | arith_expr . '/' arith_expr
  156           | arith_expr . '%' arith_expr
  157           | arith_expr . '^' arith_expr
  158           | arith_expr . MOD arith_expr
  178 expr: expr NOT BETWEEN arith_expr AND arith_expr .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']

    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '%'  shift, and go to state 110
    MOD  shift, and go to state 111
    '^'  shift, and go to state 112

    $default  reduce using rule 178 (expr)


State 300

  195 func_expr: function_name '(' expr AS data_type ')' .

    $default  reduce using rule 195 (func_expr)


State 301

   99 relation_factor: NAME '.' NAME '.' . NAME
  101                | NAME '.' NAME '.' . NAME '.' NAME
  103                | NAME '.' NAME '.' . '.' NAME

    NAME  shift, and go to state 329
    '.'   shift, and go to state 330


State 302

  100 relation_factor: NAME '.' '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', AS, END_P, FOR, GROUP, HAVING, ORDER, WHERE, WITH, ';', ',']
  102                | NAME '.' '.' NAME . '.' NAME

    '.'  shift, and go to state 331

    $default  reduce using rule 100 (relation_factor)


State 303

  104 relation_factor: NAME '.' '.' '.' . NAME

    NAME  shift, and go to state 332


State 304

   82 table_factor_non_join: select_with_parens AS relation_name opt_simple_ident_list_with_parens .

    $default  reduce using rule 82 (table_factor_non_join)


State 305

  106 joined_table: table_factor . join_type JOIN table_factor ON expr
  107             | table_factor . JOIN table_factor ON expr
  108             | table_factor . join_type JOIN table_factor USING '(' simple_ident_list ')'
  109             | table_factor . JOIN table_factor USING '(' simple_ident_list ')'
  110             | table_factor . CROSS JOIN table_factor
  110             | table_factor CROSS JOIN table_factor .  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
  111 join_type: . FULL join_outer
  112          | . LEFT join_outer
  113          | . RIGHT join_outer
  114          | . INNER

    $default  reduce using rule 110 (joined_table)

    join_type  go to state 238

    Conflict between rule 110 and token CROSS resolved as reduce (%left CROSS).
    Conflict between rule 110 and token FULL resolved as reduce (%left FULL).
    Conflict between rule 110 and token INNER resolved as reduce (%left INNER).
    Conflict between rule 110 and token JOIN resolved as reduce (%left JOIN).
    Conflict between rule 110 and token LEFT resolved as reduce (%left LEFT).
    Conflict between rule 110 and token RIGHT resolved as reduce (%left RIGHT).


State 306

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  107 joined_table: table_factor JOIN table_factor ON . expr
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 333
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 307

  109 joined_table: table_factor JOIN table_factor USING . '(' simple_ident_list ')'

    '('  shift, and go to state 334


State 308

  106 joined_table: table_factor . join_type JOIN table_factor ON expr
  106             | table_factor join_type JOIN table_factor . ON expr
  107             | table_factor . JOIN table_factor ON expr
  108             | table_factor . join_type JOIN table_factor USING '(' simple_ident_list ')'
  108             | table_factor join_type JOIN table_factor . USING '(' simple_ident_list ')'
  109             | table_factor . JOIN table_factor USING '(' simple_ident_list ')'
  110             | table_factor . CROSS JOIN table_factor
  111 join_type: . FULL join_outer
  112          | . LEFT join_outer
  113          | . RIGHT join_outer
  114          | . INNER

    CROSS  shift, and go to state 231
    FULL   shift, and go to state 232
    INNER  shift, and go to state 233
    JOIN   shift, and go to state 234
    LEFT   shift, and go to state 235
    RIGHT  shift, and go to state 236
    ON     shift, and go to state 335
    USING  shift, and go to state 336

    join_type  go to state 238


State 309

   81 table_factor_non_join: relation_factor AS relation_name opt_simple_ident_list_with_parens . opt_with_table_hint
   85 opt_with_table_hint: . %empty  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
   86                    | . WITH '(' table_hint_list ')'

    WITH  shift, and go to state 240

    $default  reduce using rule 85 (opt_with_table_hint)

    opt_with_table_hint  go to state 337


State 310

   93 table_hint_expr: NAME .  [NAME, ')', NOEXPAND, ',']
   94                | NAME . COMP_EQ expr
  200 function_name: NAME .  ['(']

    COMP_EQ  shift, and go to state 338

    '('       reduce using rule 200 (function_name)
    $default  reduce using rule 93 (table_hint_expr)


State 311

   91 table_hint: NOEXPAND . table_hint_expr
   92 table_hint_expr: . func_expr
   93                | . NAME
   94                | . NAME COMP_EQ expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME  shift, and go to state 310

    table_hint_expr  go to state 339
    func_expr        go to state 315
    function_name    go to state 78


State 312

   86 opt_with_table_hint: WITH '(' table_hint_list . ')'

    ')'  shift, and go to state 340


State 313

   87 table_hint_list: . table_hint
   87                | table_hint .  [')']
   88                | . table_hint ',' table_hint_list
   88                | table_hint . ',' table_hint_list
   89                | . table_hint table_hint_list
   89                | table_hint . table_hint_list
   90 table_hint: . table_hint_expr
   91           | . NOEXPAND table_hint_expr
   92 table_hint_expr: . func_expr
   93                | . NAME
   94                | . NAME COMP_EQ expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME      shift, and go to state 310
    NOEXPAND  shift, and go to state 311
    ','       shift, and go to state 341

    $default  reduce using rule 87 (table_hint_list)

    table_hint_list  go to state 342
    table_hint       go to state 313
    table_hint_expr  go to state 314
    func_expr        go to state 315
    function_name    go to state 78


State 314

   90 table_hint: table_hint_expr .

    $default  reduce using rule 90 (table_hint)


State 315

   92 table_hint_expr: func_expr .

    $default  reduce using rule 92 (table_hint_expr)


State 316

   83 table_factor_non_join: relation_factor relation_name opt_simple_ident_list_with_parens opt_with_table_hint .

    $default  reduce using rule 83 (table_factor_non_join)


State 317

   35 opt_groupby: GROUP BY expr_list .

    $default  reduce using rule 35 (opt_groupby)


State 318

   57 opt_having: HAVING expr .  [UNION, EXCEPT, INTERSECT, ')', END_P, FOR, ORDER, ';']
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 57 (opt_having)


State 319

  124 column_ref: NAME '.' NAME '.' NAME '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, OR, AND, NOT, COMP_LE, COMP_LT, COMP_EQ, COMP_GT, COMP_GE, COMP_NE, CNNOP, LIKE, BETWEEN, IN, IS, '+', '-', '*', '/', '%', MOD, '^', ')', AS, ASC, DESC, ELSE, END, END_P, FOR, FROM, GROUP, HAVING, NOEXPAND, OFFSET, ORDER, ROW, ROWS, THEN, WHERE, WHEN, ';', ',']
  128           | NAME '.' NAME '.' NAME '.' NAME . '.' NAME
  129           | NAME '.' NAME '.' NAME '.' NAME . '.' '*'

    '.'  shift, and go to state 343

    $default  reduce using rule 124 (column_ref)


State 320

  125 column_ref: NAME '.' NAME '.' NAME '.' '*' .

    $default  reduce using rule 125 (column_ref)


State 321

  132 column_ref: NAME '.' NAME '.' '.' NAME '.' . NAME
  133           | NAME '.' NAME '.' '.' NAME '.' . '*'

    NAME  shift, and go to state 344
    '*'   shift, and go to state 345


State 322

  130 column_ref: NAME '.' '.' NAME '.' NAME '.' . NAME
  131           | NAME '.' '.' NAME '.' NAME '.' . '*'

    NAME  shift, and go to state 346
    '*'   shift, and go to state 347


State 323

  134 column_ref: NAME '.' '.' '.' NAME '.' NAME .

    $default  reduce using rule 134 (column_ref)


State 324

  135 column_ref: NAME '.' '.' '.' NAME '.' '*' .

    $default  reduce using rule 135 (column_ref)


State 325

   42 offset_fetch: OFFSET expr ROW FETCH FIRST expr . ROW ONLY
   44             | OFFSET expr ROW FETCH FIRST expr . ROWS ONLY
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ROW      shift, and go to state 348
    ROWS     shift, and go to state 349


State 326

   43 offset_fetch: OFFSET expr ROW FETCH NEXT expr . ROW ONLY
   45             | OFFSET expr ROW FETCH NEXT expr . ROWS ONLY
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ROW      shift, and go to state 350
    ROWS     shift, and go to state 351


State 327

   46 offset_fetch: OFFSET expr ROWS FETCH FIRST expr . ROW ONLY
   48             | OFFSET expr ROWS FETCH FIRST expr . ROWS ONLY
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ROW      shift, and go to state 352
    ROWS     shift, and go to state 353


State 328

   47 offset_fetch: OFFSET expr ROWS FETCH NEXT expr . ROW ONLY
   49             | OFFSET expr ROWS FETCH NEXT expr . ROWS ONLY
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126
    ROW      shift, and go to state 354
    ROWS     shift, and go to state 355


State 329

   99 relation_factor: NAME '.' NAME '.' NAME .  [NAME, CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', AS, END_P, FOR, GROUP, HAVING, ORDER, WHERE, WITH, ';', ',']
  101                | NAME '.' NAME '.' NAME . '.' NAME

    '.'  shift, and go to state 356

    $default  reduce using rule 99 (relation_factor)


State 330

  103 relation_factor: NAME '.' NAME '.' '.' . NAME

    NAME  shift, and go to state 357


State 331

  102 relation_factor: NAME '.' '.' NAME '.' . NAME

    NAME  shift, and go to state 358


State 332

  104 relation_factor: NAME '.' '.' '.' NAME .

    $default  reduce using rule 104 (relation_factor)


State 333

  107 joined_table: table_factor JOIN table_factor ON expr .  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 107 (joined_table)


State 334

   65 simple_ident_list: . NAME
   66                  | . NAME ',' simple_ident_list
  109 joined_table: table_factor JOIN table_factor USING '(' . simple_ident_list ')'

    NAME  shift, and go to state 48

    simple_ident_list  go to state 359


State 335

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
  106 joined_table: table_factor join_type JOIN table_factor ON . expr
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 360
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 336

  108 joined_table: table_factor join_type JOIN table_factor USING . '(' simple_ident_list ')'

    '('  shift, and go to state 361


State 337

   81 table_factor_non_join: relation_factor AS relation_name opt_simple_ident_list_with_parens opt_with_table_hint .

    $default  reduce using rule 81 (table_factor_non_join)


State 338

    7 select_with_parens: . '(' select_no_parens ')'
    8                   | . '(' select_with_parens ')'
   94 table_hint_expr: NAME COMP_EQ . expr
  119 column_ref: . NAME
  120           | . NAME '.' NAME
  121           | . NAME '.' '*'
  122           | . NAME '.' NAME '.' NAME
  123           | . NAME '.' NAME '.' '*'
  124           | . NAME '.' NAME '.' NAME '.' NAME
  125           | . NAME '.' NAME '.' NAME '.' '*'
  126           | . NAME '.' '.' NAME '.' NAME
  127           | . NAME '.' '.' NAME '.' '*'
  128           | . NAME '.' NAME '.' NAME '.' NAME '.' NAME
  129           | . NAME '.' NAME '.' NAME '.' NAME '.' '*'
  130           | . NAME '.' '.' NAME '.' NAME '.' NAME
  131           | . NAME '.' '.' NAME '.' NAME '.' '*'
  132           | . NAME '.' NAME '.' '.' NAME '.' NAME
  133           | . NAME '.' NAME '.' '.' NAME '.' '*'
  134           | . NAME '.' '.' '.' NAME '.' NAME
  135           | . NAME '.' '.' '.' NAME '.' '*'
  136 expr_const: . STRING
  137           | . INTNUM
  138           | . APPROXNUM
  139           | . BOOL
  140           | . NULLX
  141           | . QUESTIONMARK
  142 simple_expr: . column_ref
  143            | . expr_const
  144            | . '(' expr_list ')'
  145            | . case_expr
  146            | . func_expr
  147            | . select_with_parens
  148            | . EXISTS select_with_parens
  149 arith_expr: . simple_expr
  150           | . '+' arith_expr
  151           | . '-' arith_expr
  152           | . arith_expr '+' arith_expr
  153           | . arith_expr '-' arith_expr
  154           | . arith_expr '*' arith_expr
  155           | . arith_expr '/' arith_expr
  156           | . arith_expr '%' arith_expr
  157           | . arith_expr '^' arith_expr
  158           | . arith_expr MOD arith_expr
  159 expr: . arith_expr
  160     | . expr COMP_LE expr
  161     | . expr COMP_LT expr
  162     | . expr COMP_EQ expr
  163     | . expr COMP_GE expr
  164     | . expr COMP_GT expr
  165     | . expr COMP_NE expr
  166     | . expr LIKE expr
  167     | . expr NOT LIKE expr
  168     | . expr AND expr
  169     | . expr OR expr
  170     | . NOT expr
  171     | . expr IS NULLX
  172     | . expr IS NOT NULLX
  173     | . expr IS BOOL
  174     | . expr IS NOT BOOL
  175     | . expr IS UNKNOWN
  176     | . expr IS NOT UNKNOWN
  177     | . expr BETWEEN arith_expr AND arith_expr
  178     | . expr NOT BETWEEN arith_expr AND arith_expr
  179     | . expr IN in_expr
  180     | . expr NOT IN in_expr
  181     | . expr CNNOP expr
  184 case_expr: . CASE case_arg when_clause_list case_default END
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME          shift, and go to state 55
    STRING        shift, and go to state 56
    INTNUM        shift, and go to state 57
    BOOL          shift, and go to state 58
    APPROXNUM     shift, and go to state 59
    NULLX         shift, and go to state 60
    QUESTIONMARK  shift, and go to state 61
    NOT           shift, and go to state 62
    '+'           shift, and go to state 63
    '-'           shift, and go to state 64
    '('           shift, and go to state 65
    CASE          shift, and go to state 66
    EXISTS        shift, and go to state 67

    select_with_parens  go to state 68
    column_ref          go to state 71
    expr_const          go to state 72
    simple_expr         go to state 73
    arith_expr          go to state 74
    expr                go to state 362
    case_expr           go to state 76
    func_expr           go to state 77
    function_name       go to state 78


State 339

   91 table_hint: NOEXPAND table_hint_expr .

    $default  reduce using rule 91 (table_hint)


State 340

   86 opt_with_table_hint: WITH '(' table_hint_list ')' .

    $default  reduce using rule 86 (opt_with_table_hint)


State 341

   87 table_hint_list: . table_hint
   88                | . table_hint ',' table_hint_list
   88                | table_hint ',' . table_hint_list
   89                | . table_hint table_hint_list
   90 table_hint: . table_hint_expr
   91           | . NOEXPAND table_hint_expr
   92 table_hint_expr: . func_expr
   93                | . NAME
   94                | . NAME COMP_EQ expr
  192 func_expr: . function_name '(' '*' ')'
  193          | . function_name '(' distinct_or_all expr ')'
  194          | . function_name '(' expr_list ')'
  195          | . function_name '(' expr AS data_type ')'
  196          | . function_name '(' ')'
  200 function_name: . NAME

    NAME      shift, and go to state 310
    NOEXPAND  shift, and go to state 311

    table_hint_list  go to state 363
    table_hint       go to state 313
    table_hint_expr  go to state 314
    func_expr        go to state 315
    function_name    go to state 78


State 342

   89 table_hint_list: table_hint table_hint_list .

    $default  reduce using rule 89 (table_hint_list)


State 343

  128 column_ref: NAME '.' NAME '.' NAME '.' NAME '.' . NAME
  129           | NAME '.' NAME '.' NAME '.' NAME '.' . '*'

    NAME  shift, and go to state 364
    '*'   shift, and go to state 365


State 344

  132 column_ref: NAME '.' NAME '.' '.' NAME '.' NAME .

    $default  reduce using rule 132 (column_ref)


State 345

  133 column_ref: NAME '.' NAME '.' '.' NAME '.' '*' .

    $default  reduce using rule 133 (column_ref)


State 346

  130 column_ref: NAME '.' '.' NAME '.' NAME '.' NAME .

    $default  reduce using rule 130 (column_ref)


State 347

  131 column_ref: NAME '.' '.' NAME '.' NAME '.' '*' .

    $default  reduce using rule 131 (column_ref)


State 348

   42 offset_fetch: OFFSET expr ROW FETCH FIRST expr ROW . ONLY

    ONLY  shift, and go to state 366


State 349

   44 offset_fetch: OFFSET expr ROW FETCH FIRST expr ROWS . ONLY

    ONLY  shift, and go to state 367


State 350

   43 offset_fetch: OFFSET expr ROW FETCH NEXT expr ROW . ONLY

    ONLY  shift, and go to state 368


State 351

   45 offset_fetch: OFFSET expr ROW FETCH NEXT expr ROWS . ONLY

    ONLY  shift, and go to state 369


State 352

   46 offset_fetch: OFFSET expr ROWS FETCH FIRST expr ROW . ONLY

    ONLY  shift, and go to state 370


State 353

   48 offset_fetch: OFFSET expr ROWS FETCH FIRST expr ROWS . ONLY

    ONLY  shift, and go to state 371


State 354

   47 offset_fetch: OFFSET expr ROWS FETCH NEXT expr ROW . ONLY

    ONLY  shift, and go to state 372


State 355

   49 offset_fetch: OFFSET expr ROWS FETCH NEXT expr ROWS . ONLY

    ONLY  shift, and go to state 373


State 356

  101 relation_factor: NAME '.' NAME '.' NAME '.' . NAME

    NAME  shift, and go to state 374


State 357

  103 relation_factor: NAME '.' NAME '.' '.' NAME .

    $default  reduce using rule 103 (relation_factor)


State 358

  102 relation_factor: NAME '.' '.' NAME '.' NAME .

    $default  reduce using rule 102 (relation_factor)


State 359

  109 joined_table: table_factor JOIN table_factor USING '(' simple_ident_list . ')'

    ')'  shift, and go to state 375


State 360

  106 joined_table: table_factor join_type JOIN table_factor ON expr .  [CROSS, FULL, INNER, JOIN, LEFT, RIGHT, ON, USING, UNION, EXCEPT, INTERSECT, ')', END_P, FOR, GROUP, HAVING, ORDER, WHERE, ';', ',']
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 106 (joined_table)


State 361

   65 simple_ident_list: . NAME
   66                  | . NAME ',' simple_ident_list
  108 joined_table: table_factor join_type JOIN table_factor USING '(' . simple_ident_list ')'

    NAME  shift, and go to state 48

    simple_ident_list  go to state 376


State 362

   94 table_hint_expr: NAME COMP_EQ expr .  [NAME, ')', NOEXPAND, ',']
  160 expr: expr . COMP_LE expr
  161     | expr . COMP_LT expr
  162     | expr . COMP_EQ expr
  163     | expr . COMP_GE expr
  164     | expr . COMP_GT expr
  165     | expr . COMP_NE expr
  166     | expr . LIKE expr
  167     | expr . NOT LIKE expr
  168     | expr . AND expr
  169     | expr . OR expr
  171     | expr . IS NULLX
  172     | expr . IS NOT NULLX
  173     | expr . IS BOOL
  174     | expr . IS NOT BOOL
  175     | expr . IS UNKNOWN
  176     | expr . IS NOT UNKNOWN
  177     | expr . BETWEEN arith_expr AND arith_expr
  178     | expr . NOT BETWEEN arith_expr AND arith_expr
  179     | expr . IN in_expr
  180     | expr . NOT IN in_expr
  181     | expr . CNNOP expr

    OR       shift, and go to state 113
    AND      shift, and go to state 114
    NOT      shift, and go to state 115
    COMP_LE  shift, and go to state 116
    COMP_LT  shift, and go to state 117
    COMP_EQ  shift, and go to state 118
    COMP_GT  shift, and go to state 119
    COMP_GE  shift, and go to state 120
    COMP_NE  shift, and go to state 121
    CNNOP    shift, and go to state 122
    LIKE     shift, and go to state 123
    BETWEEN  shift, and go to state 124
    IN       shift, and go to state 125
    IS       shift, and go to state 126

    $default  reduce using rule 94 (table_hint_expr)


State 363

   88 table_hint_list: table_hint ',' table_hint_list .

    $default  reduce using rule 88 (table_hint_list)


State 364

  128 column_ref: NAME '.' NAME '.' NAME '.' NAME '.' NAME .

    $default  reduce using rule 128 (column_ref)


State 365

  129 column_ref: NAME '.' NAME '.' NAME '.' NAME '.' '*' .

    $default  reduce using rule 129 (column_ref)


State 366

   42 offset_fetch: OFFSET expr ROW FETCH FIRST expr ROW ONLY .

    $default  reduce using rule 42 (offset_fetch)


State 367

   44 offset_fetch: OFFSET expr ROW FETCH FIRST expr ROWS ONLY .

    $default  reduce using rule 44 (offset_fetch)


State 368

   43 offset_fetch: OFFSET expr ROW FETCH NEXT expr ROW ONLY .

    $default  reduce using rule 43 (offset_fetch)


State 369

   45 offset_fetch: OFFSET expr ROW FETCH NEXT expr ROWS ONLY .

    $default  reduce using rule 45 (offset_fetch)


State 370

   46 offset_fetch: OFFSET expr ROWS FETCH FIRST expr ROW ONLY .

    $default  reduce using rule 46 (offset_fetch)


State 371

   48 offset_fetch: OFFSET expr ROWS FETCH FIRST expr ROWS ONLY .

    $default  reduce using rule 48 (offset_fetch)


State 372

   47 offset_fetch: OFFSET expr ROWS FETCH NEXT expr ROW ONLY .

    $default  reduce using rule 47 (offset_fetch)


State 373

   49 offset_fetch: OFFSET expr ROWS FETCH NEXT expr ROWS ONLY .

    $default  reduce using rule 49 (offset_fetch)


State 374

  101 relation_factor: NAME '.' NAME '.' NAME '.' NAME .

    $default  reduce using rule 101 (relation_factor)


State 375

  109 joined_table: table_factor JOIN table_factor USING '(' simple_ident_list ')' .

    $default  reduce using rule 109 (joined_table)


State 376

  108 joined_table: table_factor join_type JOIN table_factor USING '(' simple_ident_list . ')'

    ')'  shift, and go to state 377


State 377

  108 joined_table: table_factor join_type JOIN table_factor USING '(' simple_ident_list ')' .

    $default  reduce using rule 108 (joined_table)
